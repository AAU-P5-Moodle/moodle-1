{"version":3,"file":"websocketscript.min.js","sources":["../src/websocketscript.js"],"sourcesContent":["// Define and export the init function\nexport const init = (url) => {\n    console.log(\"Script is loaded and attempting to attach event listener.\"); // eslint-disable-line no-console\n\n    // Connects to socket when script loads\n    let socket = connect_to_socket(url);\n\n    const startQuizBtn = document.getElementById(\"startQuiz\");\n    if (!startQuizBtn) {\n        console.error(\"Button with id 'startQuiz' not found!\"); // eslint-disable-line no-console\n        return;\n    }\n\n    // Sends message to socket when startQuiz button is pressed\n    startQuizBtn.addEventListener(\"click\", () => {\n        console.log(\"sending message\"); // eslint-disable-line no-console\n        socket.send(\"Testing some stuff\");\n    });\n\n    // This html element can be used to display the room code received once,\n    // the teacher opens room and the websocket has responded\n    const roomcodespan = document.getElementById(\"roomCode\");\n    if (!roomcodespan) {\n        console.error(\"Span with id 'roomCode' not found!\"); // eslint-disable-line no-console\n        return;\n    }\n\n    roomcodespan.innerHTML = \"test\";\n};\n\n/**\n * Connects a websocket given url\n *\n * @param {string} url\n * @returns websocket reference\n */\nfunction connect_to_socket(url) {\n    let socket; // WebSocket reference\n    try {\n        // Initialize WebSocket connection\n        socket = new WebSocket(url);\n        console.log(\"WebSocket object created, awaiting connection.\"); // eslint-disable-line no-console\n\n        // Handle successful connection\n        socket.onopen = () => {\n            console.log(\"WebSocket connection established successfully!\"); // eslint-disable-line no-console\n        };\n\n        // Handle incoming messages\n        socket.onmessage = (event) => {\n            console.log(\"WebSocket message received:\", event.data); // eslint-disable-line no-console\n        };\n\n        // Handle errors\n        socket.onerror = (error) => {\n            console.error(\"WebSocket encountered an error:\", error); // eslint-disable-line no-console\n        };\n\n        // Handle connection close\n        socket.onclose = () => {\n            console.log(\"WebSocket connection closed.\"); // eslint-disable-line no-console\n        };\n\n    } catch (error) {\n        console.error(\"Error initializing WebSocket connection:\", error); // eslint-disable-line no-console\n    }\n\n    return socket;\n}"],"names":["url","console","log","socket","WebSocket","onopen","onmessage","event","data","onerror","error","onclose","connect_to_socket","startQuizBtn","document","getElementById","addEventListener","send","roomcodespan","innerHTML"],"mappings":"iKACqBA,MACjBC,QAAQC,IAAI,iEAGRC,gBA+BmBH,SACnBG,WAGAA,OAAS,IAAIC,UAAUJ,KACvBC,QAAQC,IAAI,kDAGZC,OAAOE,OAAS,KACZJ,QAAQC,IAAI,mDAIhBC,OAAOG,UAAaC,QAChBN,QAAQC,IAAI,8BAA+BK,MAAMC,OAIrDL,OAAOM,QAAWC,QACdT,QAAQS,MAAM,kCAAmCA,QAIrDP,OAAOQ,QAAU,KACbV,QAAQC,IAAI,iCAGlB,MAAOQ,OACLT,QAAQS,MAAM,2CAA4CA,cAGvDP,OA9DMS,CAAkBZ,WAEzBa,aAAeC,SAASC,eAAe,iBACxCF,yBACDZ,QAAQS,MAAM,yCAKlBG,aAAaG,iBAAiB,SAAS,KACnCf,QAAQC,IAAI,mBACZC,OAAOc,KAAK,+BAKVC,aAAeJ,SAASC,eAAe,YACxCG,aAKLA,aAAaC,UAAY,OAJrBlB,QAAQS,MAAM"}