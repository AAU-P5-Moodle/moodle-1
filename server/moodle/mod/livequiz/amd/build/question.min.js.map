{"version":3,"file":"question.min.js","sources":["../src/question.js"],"sourcesContent":["// THIS FILE SHOULD BE DELETED WHEN THE QUESTION CREATION IS IMPLEMENTED IN THE MOODLE PLUGIN\r\nlet savedQuestions = [];\r\nlet isEditing = false;\r\nlet editingIndex = null;\r\n\r\nexport const init = async() => {\r\n    open_question_creation_modal();\r\n\r\n    const imageUploadInput = document.getElementById('imageUpload');\r\n    const imagePreview = document.getElementById('imagePreview');\r\n\r\n    if (imageUploadInput) {\r\n        imageUploadInput.addEventListener('change', () => {\r\n            const file = imageUploadInput.files[0];\r\n            if (file) {\r\n                imagePreview.src = URL.createObjectURL(file);\r\n                imagePreview.style.display = 'block';\r\n            }\r\n        });\r\n    }\r\n}\r\n \r\n    function open_question_creation_modal() {\r\n        let add_question_button = document.getElementById(\"id_buttonaddquestion\");\r\n        if (add_question_button){\r\n            add_question_button.addEventListener('click', () => {create_question_modal()});\r\n        } \r\n    }\r\n \r\n \r\n    function create_question_modal() {\r\n \r\n        if (document.querySelector('.Modal_div')) {\r\n            return; \r\n        }\r\n \r\n        let modal_div = document.createElement(\"div\"); \r\n        modal_div.className = \"Modal_div\";\r\n \r\n        let page = document.getElementById(\"page-mod-livequiz-quizcreator\");\r\n \r\n        let question_input = document.createElement('textarea');\r\n        question_input.placeholder = \"Enter question\";\r\n        question_input.className = \"question_input_large\";\r\n \r\n        modal_div.appendChild(question_input);\r\n \r\n        let file_picker = create_file_picker();\r\n        modal_div.appendChild(create_file_picker());\r\n        modal_div.appendChild(create_timer_element());\r\n \r\n        let all_answers_for_question_div = document.createElement(\"div\");\r\n        all_answers_for_question_div.className = \"all_answers_for_question_div\";\r\n \r\n        modal_div.appendChild(create_answer_button(all_answers_for_question_div));\r\n        modal_div.appendChild(all_answers_for_question_div);\r\n        let saveButton = save_question(page, question_input, modal_div, all_answers_for_question_div, file_picker)\r\n        modal_div.appendChild(saveButton);\r\n        modal_div.appendChild(create_discard_button());\r\n \r\n        page.appendChild(modal_div);\r\n    }\r\n    \r\n    function create_discard_button() {\r\n        let discard_question_button = create_element(\"discard_button\", \"div\", \"discard_question_button\", \"Discard\");\r\n    \r\n        discard_question_button.addEventListener('click', () => {\r\n            let toast_promise_deletion_div = create_element(\"toast_promise_deletion_div\", 'div', \"toast_promise_deletion_div\", \"Are you sure you want to discard changes?\");\r\n            let cancel_question_deletion_button = create_element(\"cancel_question_deletion_button\", 'button', \"cancel_question_deletion_button\", \"No\");\r\n            let continue_question_deletion_button = create_element(\"continue_question_deletion_button\", 'button', \"continue_question_deletion_button\", \"Yes\");\r\n    \r\n            toast_promise_deletion_div.appendChild(cancel_question_deletion_button);\r\n            toast_promise_deletion_div.appendChild(continue_question_deletion_button);\r\n    \r\n            let modal_div = document.querySelector('.Modal_div');\r\n            modal_div.appendChild(toast_promise_deletion_div);\r\n    \r\n            continue_question_deletion_button.addEventListener('click', () => {\r\n                isEditing = false;\r\n                editingIndex = null\r\n                modal_div.remove();\r\n            });\r\n    \r\n            cancel_question_deletion_button.addEventListener('click', () => {\r\n                toast_promise_deletion_div.remove();\r\n            });\r\n        });\r\n    \r\n        return discard_question_button;\r\n    }\r\n\r\n    function create_delete_button(index) {\r\n        let delete_question_button = create_element(\"delete_button\", \"button\", \"delete_question_button\", \"Delete Question\");\r\n    \r\n        delete_question_button.addEventListener('click', () => {\r\n            let toast_promise_deletion_div = create_element(\"toast_promise_deletion_div\", 'div', \"toast_promise_deletion_div\", \"Are you sure you want to delete this question?\");\r\n            let cancel_question_deletion_button = create_element(\"cancel_question_deletion_button\", 'button', \"cancel_question_deletion_button\", \"No\");\r\n            let continue_question_deletion_button = create_element(\"continue_question_deletion_button\", 'button', \"continue_question_deletion_button\", \"Yes\");\r\n\r\n            toast_promise_deletion_div.appendChild(cancel_question_deletion_button);\r\n            toast_promise_deletion_div.appendChild(continue_question_deletion_button);\r\n\r\n            let modal_div = document.querySelector('.Modal_div');\r\n            modal_div.appendChild(toast_promise_deletion_div);\r\n\r\n            continue_question_deletion_button.addEventListener('click', () => {\r\n                savedQuestions.splice(index,1);\r\n                \r\n                let saved_questions_list = document.getElementById(\"saved_questions_list\");\r\n                let question_list_item = saved_questions_list.children[index]\r\n                if (question_list_item){\r\n                    saved_questions_list.removeChild(question_list_item);\r\n                }\r\n                for (let i = index; i < saved_questions_list.children.length; i++) {\r\n                    saved_questions_list.children[i].dataset.index = i;\r\n                }\r\n                isEditing = false;\r\n                editingIndex = null\r\n                modal_div.remove();\r\n            });\r\n\r\n            cancel_question_deletion_button.addEventListener('click', () => {\r\n                toast_promise_deletion_div.remove();\r\n            });\r\n        });\r\n    \r\n        return delete_question_button;\r\n    }\r\n\r\n    function create_cancel_button() {\r\n        let cancel_button = create_element(\"cancel_button\", \"button\", \"cancel_button\", \"Cancel\");\r\n    \r\n        \r\n        cancel_button.addEventListener('click', () => {\r\n            console.log('Cancel button clicked!');\r\n            // Add cancel functionality here\r\n        });\r\n    \r\n        document.body.appendChild(cancel_button);  // Append it to the body for fixed positioning\r\n    }\r\n \r\n    function create_file_picker() {\r\n        let file_picker_input = create_element(\"file_input\", \"input\", \"file_picker_input\", \"\");\r\n        file_picker_input.type = 'file';\r\n        file_picker_input.accept = ['image/*', 'video/*'];\r\n        file_picker_input.id = \"file_input\"; \r\n \r\n        const image = document.createElement('img');\r\n \r\n        let file_label = document.createElement('label');\r\n        file_label.htmlFor = \"file_input\";  \r\n        file_label.className = \"file_upload_section\";\r\n        file_label.textContent = \"+ Add video or image\";  \r\n \r\n \r\n        let preview = document.createElement(\"img\");\r\n        preview.style.display = \"none\";\r\n        preview.style.maxWidth = \"50%\";\r\n        preview.style.maxHeight = \"200px\";\r\n        preview.style.marginTop = \"10px\";\r\n        preview.className = \"preview_image\";\r\n \r\n        file_picker_input.addEventListener('change', () => {\r\n            const file = file_picker_input.files[0];\r\n            image.src = URL.createObjectURL(file);\r\n            image.style.display = 'block';\r\n        });\r\n \r\n        let file_container = document.createElement(\"div\");\r\n        file_container.className = \"file_upload_section\"; \r\n        file_container.appendChild(file_label);  \r\n        file_container.appendChild(file_picker_input);  \r\n        file_container.appendChild(image);\r\n \r\n        return file_container;\r\n    }\r\n \r\n    function create_element(element_name, type, class_name, content) {\r\n        element_name = document.createElement(type);\r\n        element_name.className = class_name;\r\n        element_name.textContent = content;\r\n        return element_name;\r\n    }\r\n \r\n    function create_timer_element() {\r\n        let timer_div = document.createElement(\"div\");\r\n        timer_div.className = \"time_limit_container\";\r\n \r\n \r\n        let timer_label = document.createElement(\"label\");\r\n        timer_label.textContent = \"Add time limit: \";\r\n        timer_label.className = \"time_limit_label\"; \r\n \r\n        let promise_timer_checkbox = document.createElement(\"input\");\r\n        promise_timer_checkbox.setAttribute(\"type\", \"checkbox\");\r\n        promise_timer_checkbox.className = \"time_limit_checkbox\"; \r\n \r\n        let set_timer_input = document.createElement(\"input\");\r\n        set_timer_input.type = 'number';\r\n        set_timer_input.placeholder = \"0 sec\";\r\n        set_timer_input.className = \"set_timer_input\"; \r\n        set_timer_input.setAttribute('disabled', 'true'); \r\n        set_timer_input.style.textAlign = \"center\"; \r\n \r\n \r\n        promise_timer_checkbox.addEventListener('change', () => {\r\n            if (promise_timer_checkbox.checked) {\r\n                set_timer_input.removeAttribute('disabled'); \r\n            } else {\r\n                set_timer_input.setAttribute('disabled', 'true'); \r\n                set_timer_input.value = \"\";\r\n            }\r\n        });\r\n \r\n \r\n        let timer_input_container = document.createElement(\"div\");\r\n        timer_input_container.className = \"timer_input_container\"; \r\n \r\n \r\n        timer_input_container.appendChild(promise_timer_checkbox);\r\n        timer_input_container.appendChild(set_timer_input);\r\n \r\n \r\n        timer_div.appendChild(timer_label);\r\n        timer_div.appendChild(timer_input_container);  \r\n \r\n        return timer_div;\r\n    }\r\n \r\n    function save_question(page, question_input, modal_div, answers_div, file_picker) {\r\n        let save_question_button = create_element(\"save_question_button\", 'button', \"save_button\", \"Save question\");\r\n        save_question_button.addEventListener('click', () => {\r\n            let questionText = question_input.value.trim();\r\n            if (!questionText) {\r\n                alert(\"Please enter a question.\");\r\n                return;\r\n            }\r\n    \r\n            let answers = [];\r\n            for (let i = 0; i < answers_div.children.length; i++) {\r\n                let answertext = answers_div.children[i].querySelector(\".answer_input\").value.trim();\r\n                let iscorrect = answers_div.children[i].querySelector(\".answer_checkbox\").checked;\r\n\r\n                answers.push({ description: answertext, correct: iscorrect, explanation:\"\" });\r\n            }\r\n    \r\n            let file_input = file_picker.querySelector('input[type=\"file\"]');\r\n            let file = file_input.files[0];\r\n            \r\n            let savedQuestion = {\r\n                question: questionText,\r\n                answers: answers,\r\n                file: file,\r\n                description:\"\",\r\n                explanation:\"\",\r\n                timelimit:0 //todo proper element get by id and logic for just empty = 0\r\n\r\n            };\r\n            \r\n            if (isEditing && editingIndex != null){\r\n            savedQuestions[editingIndex] = savedQuestion;\r\n    \r\n            let saved_questions_list = document.getElementById(\"saved_questions_list\");\r\n            let question_list_item = saved_questions_list.children[editingIndex];\r\n\r\n            question_list_item.textContent = savedQuestion.question;\r\n\r\n\r\n            isEditing = false;\r\n            editingIndex = null;\r\n            } else {\r\n                savedQuestions.push(savedQuestion);\r\n\r\n                let saved_questions_list = document.getElementById(\"saved_questions_list\");\r\n                let question_list_item = document.createElement('li');\r\n                question_list_item.textContent = savedQuestion.question;\r\n                question_list_item.dataset.index = savedQuestions.length - 1;\r\n\r\n                const openModalHandler = () => {\r\n                    open_saved_question_modal(savedQuestions[question_list_item.dataset.index], question_list_item.dataset.index);\r\n                };\r\n\r\n                question_list_item.addEventListener('click',openModalHandler);\r\n                saved_questions_list.appendChild(question_list_item);\r\n            }\r\n            \r\n            modal_div.remove();\r\n        });\r\n    \r\n    \r\n        return save_question_button;\r\n    }\r\n \r\n    function open_saved_question_modal(savedQuestion,index) {\r\n        isEditing = true;\r\n        editingIndex = index;\r\n\r\n        let modal_div = document.createElement(\"div\");\r\n        modal_div.className = \"Modal_div\";\r\n\r\n        let question_input = document.createElement('textarea');\r\n        question_input.placeholder = \"Enter question\";\r\n        question_input.className = \"question_input\";\r\n        question_input.value = savedQuestion.question;\r\n\r\n        modal_div.appendChild(question_input);\r\n\r\n        let file_picker = create_file_picker();\r\n        if (savedQuestion.file) {\r\n            const image = file_picker.querySelector('img');\r\n            image.src = URL.createObjectURL(savedQuestion.file);\r\n            image.style.maxWidth = \"300px\";\r\n        }\r\n        modal_div.appendChild(file_picker);\r\n\r\n        let all_answers_for_question_div = document.createElement(\"div\");\r\n\r\n        savedQuestion.answers.forEach(answer => {\r\n            let answer_container = document.createElement('div');\r\n            answer_container.className = \"container_for_new_answer\";\r\n\r\n            let answer_input = document.createElement('input');\r\n            answer_input.className = \"answer_input\";\r\n            answer_input.value = answer.text;\r\n            answer_input.setAttribute(\"required\", true);\r\n\r\n            let answer_checkbox = document.createElement('input');\r\n            answer_checkbox.setAttribute(\"type\", \"checkbox\");\r\n            answer_checkbox.className = \"answer_checkbox\";\r\n            answer_checkbox.checked = answer.correct;\r\n\r\n            let delete_answer_button = create_element(\"delete_answer_button\", \"button\", \"delete_answer_button\", \"\");\r\n\r\n            delete_answer_button.addEventListener('click', () => {\r\n                answer_container.remove();\r\n                answer_count--;\r\n            });\r\n\r\n            answer_container.appendChild(answer_checkbox);\r\n            answer_container.appendChild(answer_input);\r\n            answer_container.appendChild(delete_answer_button);\r\n\r\n            all_answers_for_question_div.appendChild(answer_container);\r\n        });\r\n\r\n        modal_div.appendChild(create_answer_button(all_answers_for_question_div));\r\n        modal_div.appendChild(all_answers_for_question_div);\r\n\r\n        modal_div.appendChild(save_question(null,question_input,modal_div,all_answers_for_question_div,file_picker));\r\n        modal_div.appendChild(create_discard_button());\r\n        modal_div.appendChild(create_delete_button(index));\r\n\r\n\r\n        let page = document.getElementById(\"page-mod-livequiz-quizcreator\");\r\n        page.appendChild(modal_div);\r\n    }\r\n \r\n    function create_answer_button(parent_element) {\r\n        let add_new_answer_to_question = create_element(\"add_answer_button\", 'button', 'add_new_answer_to_question', 'Add Answer');\r\n        let answer_count = 0;\r\n \r\n        add_new_answer_to_question.addEventListener('click', () => {\r\n            if (answer_count < 8) {\r\n                let answer_container = document.createElement('div');\r\n                answer_container.className = \"container_for_new_answer\";\r\n \r\n                let answer_input = document.createElement('input');\r\n                answer_input.className = \"answer_input\";\r\n                answer_input.placeholder = \"Enter answer\";\r\n                answer_input.setAttribute(\"required\", true);\r\n \r\n                let answer_checkbox = document.createElement('input');\r\n                answer_checkbox.setAttribute(\"type\", \"checkbox\");\r\n                answer_checkbox.className = \"answer_checkbox\"; \r\n \r\n                let delete_answer_button = create_element(\"delete_answer_button\", \"button\", \"delete_answer_button\", \"\");\r\n \r\n                answer_container.appendChild(answer_checkbox);\r\n                answer_container.appendChild(answer_input);\r\n                answer_container.appendChild(delete_answer_button);\r\n\r\n                delete_answer_button.addEventListener('click', () => {\r\n                    answer_container.remove();\r\n                    answer_count--;\r\n                });\r\n \r\n                parent_element.appendChild(answer_container);\r\n                answer_count++;\r\n            }\r\n        });\r\n        return add_new_answer_to_question;\r\n    }"],"names":["savedQuestions","isEditing","editingIndex","create_discard_button","discard_question_button","create_element","addEventListener","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","appendChild","modal_div","document","querySelector","remove","create_file_picker","file_picker_input","type","accept","id","image","createElement","file_label","htmlFor","className","textContent","preview","style","display","maxWidth","maxHeight","marginTop","file","files","src","URL","createObjectURL","file_container","element_name","class_name","content","save_question","page","question_input","answers_div","file_picker","save_question_button","questionText","value","trim","alert","answers","i","children","length","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","question","timelimit","getElementById","saved_questions_list","question_list_item","dataset","index","openModalHandler","placeholder","all_answers_for_question_div","forEach","answer","answer_container","answer_input","text","setAttribute","answer_checkbox","delete_answer_button","answer_count","create_answer_button","delete_question_button","splice","removeChild","create_delete_button","open_saved_question_modal","parent_element","add_new_answer_to_question","async","add_question_button","timer_div","timer_label","promise_timer_checkbox","set_timer_input","textAlign","removeAttribute","timer_input_container","create_timer_element","saveButton","create_question_modal","open_question_creation_modal","imageUploadInput","imagePreview"],"mappings":"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"}