{"version":3,"file":"student_join_quiz.min.js","sources":["../src/student_join_quiz.js"],"sourcesContent":["/* eslint-disable no-console */\n// Define and export the init function\nexport const init = (url, studentid) => {\n    console.log(\"Student Script is loaded and attempting to attach event listener.\");\n    const startQuizBtn = document.getElementById(\"room_connection_button\");\n    if (!startQuizBtn) {\n        console.error(\"Button with id 'startQuiz' not found!\");\n        return;\n    }\n    // Sends message to socket when startQuiz button is pressed\n    startQuizBtn.addEventListener(\"click\", () => {\n        console.log(\"sending message\"); // eslint-disable-line no-console\n        connect_to_socket(url).then((socket) => {\n            socket.send(\"Testing some stuff for students\" + ' ' + `${studentid}`);\n        });\n    });\n};\n\n\n/**\n * Connects a websocket given url\n *\n * @param {string} url\n * @returns websocket reference\n */\nasync function connect_to_socket(url) {\n    console.log(url);\n    let socket; // WebSocket reference\n    socket = new WebSocket(url);\n\n    let myPromise = new Promise(function(myResolve, myReject) {\n        socket.onopen = () => {\n            console.log(\"WebSocket connection established successfully!\"); // eslint-disable-line no-console\n            myResolve(socket);\n        };\n\n\n        // Handle errors\n        socket.onerror = (error) => {\n            console.error(\"WebSocket encountered an error:\", error); // eslint-disable-line no-console\n            myReject();\n        };\n    });\n\n    try {\n        console.log(\"WebSocket object created, awaiting connection.\"); // eslint-disable-line no-console\n\n        // Handle successful connection\n\n\n        // Handle incoming messages\n        socket.onmessage = (event) => {\n            console.log(\"WebSocket message received:\", event.data); // eslint-disable-line no-console\n        };\n\n\n        // Handle connection close\n        socket.onclose = () => {\n            console.log(\"WebSocket connection closed.\"); // eslint-disable-line no-console\n        };\n\n    } catch (error) {\n        console.error(\"Error initializing WebSocket connection:\", error); // eslint-disable-line no-console\n    }\n\n    return myPromise;\n}"],"names":["url","studentid","console","log","startQuizBtn","document","getElementById","addEventListener","socket","WebSocket","myPromise","Promise","myResolve","myReject","onopen","onerror","error","onmessage","event","data","onclose","connect_to_socket","then","send"],"mappings":"mKAEoB,CAACA,IAAKC,aACtBC,QAAQC,IAAI,2EACNC,aAAeC,SAASC,eAAe,0BACxCF,aAKLA,aAAaG,iBAAiB,SAAS,KACnCL,QAAQC,IAAI,kCAcaH,SAEzBQ,OADJN,QAAQC,IAAIH,KAEZQ,OAAS,IAAIC,UAAUT,SAEnBU,UAAY,IAAIC,SAAQ,SAASC,UAAWC,UAC5CL,OAAOM,OAAS,KACZZ,QAAQC,IAAI,kDACZS,UAAUJ,SAKdA,OAAOO,QAAWC,QACdd,QAAQc,MAAM,kCAAmCA,OACjDH,mBAKJX,QAAQC,IAAI,kDAMZK,OAAOS,UAAaC,QAChBhB,QAAQC,IAAI,8BAA+Be,MAAMC,OAKrDX,OAAOY,QAAU,KACblB,QAAQC,IAAI,iCAGlB,MAAOa,OACLd,QAAQc,MAAM,2CAA4CA,cAGvDN,UArDHW,CAAkBrB,KAAKsB,MAAMd,SACzBA,OAAOe,KAAK,6CAA6CtB,kBAP7DC,QAAQc,MAAM"}