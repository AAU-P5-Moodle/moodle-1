{"version":3,"file":"edit_question.min.js","sources":["../src/edit_question.js"],"sourcesContent":["import Templates from \"core/templates\";\nimport { exception as displayException } from \"core/notification\";\nimport { save_question, get_question} from \"./repository\";\nimport {add_answer_button_event_listener, create_answer_container, add_discard_question_button_listener} from \"./edit_question_helper\";\nimport {add_delete_question_listeners} from \"./delete_question\";\n\nexport const init = async (quizid, lecturerid) => {\n    add_edit_question_listeners(quizid, lecturerid);\n};\n\nexport function add_edit_question_listeners(quizid, lecturerid) {\n    let question_list = document.getElementById(\"saved_questions_list\");\n    question_list.addEventListener(\"click\", (event) => {\n        let target = event.target;\n        if(target.classList.contains(\"edit-question-btn\") || target.classList.contains(\"question-title\")) {\n            let questionid = parseInt(target.dataset.id, 10);\n            render_edit_question_menu_popup(quizid, lecturerid, questionid);\n        }\n    });\n}\n\nfunction render_edit_question_menu_popup(quizid, lecturerid, questionid) {\n    // This will call the function to load and render our template.\n    Templates.renderForPromise(\"mod_livequiz/question_menu_popup\")\n\n        // It returns a promise that needs to be resolved.\n        .then(({ html, js }) => {\n            // Here we have the compiled template.\n            Templates.appendNodeContents(\".main-container\", html, js);\n            get_question(quizid, questionid).then((question)=> {restore_question_data_in_popup(question);});\n            add_answer_button_event_listener();\n            add_save_question_button_listener(quizid, lecturerid, questionid);\n            add_discard_question_button_listener();\n        })\n\n        // Deal with this exception (Using core/notify exception function is recommended).\n        .catch((error) => displayException(error));\n}\n\nfunction add_save_question_button_listener(quizid, lecturerid, questionid) {\n    let save_question_button = document.querySelector(\".save_button\");\n    save_question_button.addEventListener(\"click\", () => {\n        on_save_question_button_clicked(quizid, lecturerid, questionid);\n    });\n}\n\nfunction on_save_question_button_clicked(quizid, lecturerid, questionid) {\n    let question_input_title = document.getElementById(\"question_title_id\");\n    let question_indput_description = document.getElementById(\"question_description_id\");\n    let question_indput_explanation = document.getElementById(\"question_explanation_id\");\n    let questionTitle = question_input_title.value.trim();\n    let questionDesription = question_indput_description.value.trim();\n    let questionExplanation = question_indput_explanation.value.trim();\n\n    if (!questionDesription) {\n        alert(\"Please enter a question description.\");\n        return;\n    }\n    if(!questionTitle){\n        questionTitle = \"Question\";\n    }\n    let answers = [];\n    let answers_div = document.querySelector(\".all_answers_for_question_div\");\n    for (let i = 0; i < answers_div.children.length; i++) {\n        let answertext = answers_div.children[i]\n            .querySelector(\".answer_input\")\n            .value.trim();\n\n        let iscorrect =\n            answers_div.children[i].querySelector(\".answer_checkbox\").checked;\n        iscorrect = iscorrect ? 1 : 0;\n\n        answers.push({\n            description: answertext,\n            correct: iscorrect,\n            explanation: \"\",\n        });\n    }\n\n    let savedQuestion = {\n        id: questionid,\n        title: questionTitle,\n        answers: answers,\n        description: questionDesription,\n        explanation: questionExplanation,\n    };\n    save_question(savedQuestion, lecturerid, quizid).then((questions) => {\n        const contextsavedquestions = {\n            questions: questions,\n        };\n\n        //Remove the saved questions list.\n        let questions_list = document.querySelector(\"#saved_questions_list\");\n        questions_list.remove();\n\n        //Re-render saved questions list.\n        Templates.renderForPromise(\n            \"mod_livequiz/saved_questions_list\",\n            contextsavedquestions\n        )\n            .then(({ html, js }) => {\n                Templates.appendNodeContents(\"#saved-questions-container\", html, js);\n                add_edit_question_listeners(quizid, lecturerid);\n                add_delete_question_listeners(quizid,lecturerid);\n            })\n            .catch((error) => displayException(error));\n    });\n    //Remove edit question pop-up\n    let modal_div = document.querySelector(\".Modal_div\");\n    modal_div.remove();\n}\nfunction restore_question_data_in_popup(questiondata){\n    document.getElementById(\"question_title_id\").value = questiondata.questiontitle;\n    document.getElementById(\"question_description_id\").value = questiondata.questiondescription;\n    document.getElementById(\"question_explanation_id\").value = questiondata.questionexplanation;\n    let answers = questiondata.answers;\n    for(let i=0; i < answers.length; i++){\n        restore_answer_data_in_popup(answers[i]);\n    }\n    console.log(\"answers: \",answers);\n\n}\n\nfunction restore_answer_data_in_popup(answer) {\n    let answer_container = create_answer_container(answer.answerid);\n    answer_container.querySelector(\".answer_input\").value = answer.answerdescription;\n    answer_container.querySelector(\".answer_checkbox\").checked = answer.answercorrect;\n    let parent_element = document.querySelector(\".all_answers_for_question_div\");\n    parent_element.appendChild(answer_container);\n}\n\n\n\n\n\n\n\n\n"],"names":["add_edit_question_listeners","quizid","lecturerid","document","getElementById","addEventListener","event","target","classList","contains","questionid","parseInt","dataset","id","renderForPromise","then","_ref","html","js","appendNodeContents","question","questiondata","value","questiontitle","questiondescription","questionexplanation","answers","i","length","restore_answer_data_in_popup","console","log","restore_question_data_in_popup","querySelector","question_input_title","question_indput_description","question_indput_explanation","questionTitle","trim","questionDesription","questionExplanation","alert","answers_div","children","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","title","questions","contextsavedquestions","remove","_ref2","catch","error","on_save_question_button_clicked","add_save_question_button_listener","render_edit_question_menu_popup","answer","answer_container","answerid","answerdescription","answercorrect","appendChild","async"],"mappings":"8cAUgBA,4BAA4BC,OAAQC,YAC5BC,SAASC,eAAe,wBAC9BC,iBAAiB,SAAUC,YACjCC,OAASD,MAAMC,UAChBA,OAAOC,UAAUC,SAAS,sBAAwBF,OAAOC,UAAUC,SAAS,kBAAmB,KAC1FC,WAAaC,SAASJ,OAAOK,QAAQC,GAAI,cAMhBZ,OAAQC,WAAYQ,+BAE/CI,iBAAiB,oCAGtBC,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BAEDC,mBAAmB,kBAAmBF,KAAMC,iCACzCjB,OAAQS,YAAYK,MAAMK,qBAkFXC,cACpClB,SAASC,eAAe,qBAAqBkB,MAAQD,aAAaE,cAClEpB,SAASC,eAAe,2BAA2BkB,MAAQD,aAAaG,oBACxErB,SAASC,eAAe,2BAA2BkB,MAAQD,aAAaI,wBACpEC,QAAUL,aAAaK,YACvB,IAAIC,EAAE,EAAGA,EAAID,QAAQE,OAAQD,IAC7BE,6BAA6BH,QAAQC,IAEzCG,QAAQC,IAAI,YAAYL,SA1FoCM,CAA+BZ,mFAUpDnB,OAAQC,WAAYQ,YAChCP,SAAS8B,cAAc,gBAC7B5B,iBAAiB,SAAS,eAKVJ,OAAQC,WAAYQ,gBACrDwB,qBAAuB/B,SAASC,eAAe,qBAC/C+B,4BAA8BhC,SAASC,eAAe,2BACtDgC,4BAA8BjC,SAASC,eAAe,2BACtDiC,cAAgBH,qBAAqBZ,MAAMgB,OAC3CC,mBAAqBJ,4BAA4Bb,MAAMgB,OACvDE,oBAAsBJ,4BAA4Bd,MAAMgB,WAEvDC,+BACDE,MAAM,wCAGNJ,gBACAA,cAAgB,gBAEhBX,QAAU,GACVgB,YAAcvC,SAAS8B,cAAc,qCACpC,IAAIN,EAAI,EAAGA,EAAIe,YAAYC,SAASf,OAAQD,IAAK,KAC9CiB,WAAaF,YAAYC,SAAShB,GACjCM,cAAc,iBACdX,MAAMgB,OAEPO,UACAH,YAAYC,SAAShB,GAAGM,cAAc,oBAAoBa,QAC9DD,UAAYA,UAAY,EAAI,EAE5BnB,QAAQqB,KAAK,CACTC,YAAaJ,WACbK,QAASJ,UACTK,YAAa,SAIjBC,cAAgB,CAChBtC,GAAIH,WACJ0C,MAAOf,cACPX,QAASA,QACTsB,YAAaT,mBACbW,YAAaV,mDAEHW,cAAejD,WAAYD,QAAQc,MAAMsC,kBAC7CC,sBAAwB,CAC1BD,UAAWA,WAIMlD,SAAS8B,cAAc,yBAC7BsB,4BAGLzC,iBACN,oCACAwC,uBAECvC,MAAKyC,YAACvC,KAAEA,KAAFC,GAAQA,6BACDC,mBAAmB,6BAA8BF,KAAMC,IACjElB,4BAA4BC,OAAQC,+DACND,OAAOC,eAExCuD,OAAOC,QAAU,2BAAiBA,YAG3BvD,SAAS8B,cAAc,cAC7BsB,SAnENI,CAAgC1D,OAAQC,WAAYQ,eAXhDkD,CAAkC3D,OAAQC,WAAYQ,gFAKzD+C,OAAOC,QAAU,2BAAiBA,SApB/BG,CAAgC5D,OAAQC,WAAYQ,yBA2GvDmB,6BAA6BiC,YAC9BC,kBAAmB,iDAAwBD,OAAOE,UACtDD,iBAAiB9B,cAAc,iBAAiBX,MAAQwC,OAAOG,kBAC/DF,iBAAiB9B,cAAc,oBAAoBa,QAAUgB,OAAOI,cAC/C/D,SAAS8B,cAAc,iCAC7BkC,YAAYJ,gCA1HXK,MAAOnE,OAAQC,cAC/BF,4BAA4BC,OAAQC"}