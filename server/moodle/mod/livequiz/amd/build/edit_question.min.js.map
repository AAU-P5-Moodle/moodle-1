{"version":3,"file":"edit_question.min.js","sources":["../src/edit_question.js"],"sourcesContent":["import Templates from \"core/templates\";\r\nimport { exception as displayException } from \"core/notification\";\r\nimport { save_question, get_question} from \"./repository\";\r\nimport {\r\n    add_answer_button_event_listener,\r\n    create_answer_container,\r\n    add_discard_question_button_listener,\r\n    validate_submission} from \"./edit_question_helper\";\r\nimport {add_delete_question_listeners} from \"./delete_question\";\r\n\r\nexport const init = async (quizid, lecturerid) => {\r\n    add_edit_question_listeners(quizid, lecturerid);\r\n};\r\n\r\nexport function add_edit_question_listeners(quizid, lecturerid) {\r\n    let question_list = document.getElementById(\"saved_questions_list\");\r\n    question_list.addEventListener(\"click\", (event) => {\r\n        let target = event.target;\r\n        if(target.classList.contains(\"edit-question-btn\") || target.classList.contains(\"question-title\")) {\r\n            let questionid = parseInt(target.dataset.id, 10);\r\n            render_edit_question_menu_popup(quizid, lecturerid, questionid);\r\n        }\r\n    });\r\n}\r\n\r\nfunction render_edit_question_menu_popup(quizid, lecturerid, questionid) {\r\n    // This will call the function to load and render our template.\r\n    Templates.renderForPromise(\"mod_livequiz/question_menu_popup\")\r\n\r\n        // It returns a promise that needs to be resolved.\r\n        .then(({ html, js }) => {\r\n            // Here we have the compiled template.\r\n            Templates.appendNodeContents(\".main-container\", html, js);\r\n            get_question(quizid, questionid).then((question)=> {restore_question_data_in_popup(question);});\r\n            add_answer_button_event_listener();\r\n            add_save_question_button_listener(quizid, lecturerid, questionid);\r\n            add_discard_question_button_listener();\r\n        })\r\n\r\n        // Deal with this exception (Using core/notify exception function is recommended).\r\n        .catch((error) => displayException(error));\r\n}\r\n\r\nfunction add_save_question_button_listener(quizid, lecturerid, questionid) {\r\n    let save_question_button = document.querySelector(\".save_button\");\r\n    save_question_button.addEventListener(\"click\", () => {\r\n        on_save_question_button_clicked(quizid, lecturerid, questionid);\r\n    });\r\n}\r\n\r\nfunction on_save_question_button_clicked(quizid, lecturerid, questionid) {\r\n    let question_input_title = document.getElementById(\"question_title_id\");\r\n    let question_indput_description = document.getElementById(\"question_description_id\");\r\n    let question_indput_explanation = document.getElementById(\"question_explanation_id\");\r\n    let questionTitle = question_input_title.value.trim();\r\n    let questionDesription = question_indput_description.value.trim();\r\n    let questionExplanation = question_indput_explanation.value.trim();\r\n\r\n    let answers = [];\r\n    let answers_div = document.querySelector(\".all_answers_for_question_div\");\r\n    for (let i = 0; i < answers_div.children.length; i++) {\r\n        let answertext = answers_div.children[i]\r\n            .querySelector(\".answer_input\")\r\n            .value.trim();\r\n\r\n        let iscorrect =\r\n            answers_div.children[i].querySelector(\".answer_checkbox\").checked;\r\n        iscorrect = iscorrect ? 1 : 0;\r\n\r\n        answers.push({\r\n            description: answertext,\r\n            correct: iscorrect,\r\n            explanation: \"\",\r\n        });\r\n    }\r\n\r\n    let savedQuestion = {\r\n        id: questionid,\r\n        title: questionTitle,\r\n        answers: answers,\r\n        description: questionDesription,\r\n        explanation: questionExplanation,\r\n    };\r\n\r\n    if(!validate_submission(savedQuestion.answers)) {\r\n        return;\r\n    }\r\n\r\n    save_question(savedQuestion, lecturerid, quizid).then((questions) => {\r\n        const contextsavedquestions = {\r\n            questions: questions,\r\n        };\r\n\r\n        //Remove the saved questions list.\r\n        let questions_list = document.querySelector(\"#saved_questions_list\");\r\n        questions_list.remove();\r\n\r\n        //Re-render saved questions list.\r\n        Templates.renderForPromise(\r\n            \"mod_livequiz/saved_questions_list\",\r\n            contextsavedquestions\r\n        )\r\n            .then(({ html, js }) => {\r\n                Templates.appendNodeContents(\"#saved-questions-container\", html, js);\r\n                add_edit_question_listeners(quizid, lecturerid);\r\n                add_delete_question_listeners(quizid,lecturerid);\r\n            })\r\n            .catch((error) => displayException(error));\r\n    });\r\n    //Remove edit question pop-up\r\n    let modal_div = document.querySelector(\".Modal_div\");\r\n    modal_div.remove();\r\n}\r\nfunction restore_question_data_in_popup(questiondata){\r\n    document.getElementById(\"question_title_id\").value = questiondata.questiontitle;\r\n    document.getElementById(\"question_description_id\").value = questiondata.questiondescription;\r\n    document.getElementById(\"question_explanation_id\").value = questiondata.questionexplanation;\r\n    let answers = questiondata.answers;\r\n    for(let i=0; i < answers.length; i++){\r\n        restore_answer_data_in_popup(answers[i]);\r\n    }\r\n    console.log(\"answers: \",answers);\r\n\r\n}\r\n\r\nfunction restore_answer_data_in_popup(answer) {\r\n    let answer_container = create_answer_container(answer.answerid);\r\n    answer_container.querySelector(\".answer_input\").value = answer.answerdescription;\r\n    answer_container.querySelector(\".answer_checkbox\").checked = answer.answercorrect;\r\n    let parent_element = document.querySelector(\".all_answers_for_question_div\");\r\n    parent_element.appendChild(answer_container);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["add_edit_question_listeners","quizid","lecturerid","document","getElementById","addEventListener","event","target","classList","contains","questionid","parseInt","dataset","id","renderForPromise","then","_ref","html","js","appendNodeContents","question","questiondata","value","questiontitle","questiondescription","questionexplanation","answers","i","length","restore_answer_data_in_popup","console","log","restore_question_data_in_popup","querySelector","question_input_title","question_indput_description","question_indput_explanation","questionTitle","trim","questionDesription","questionExplanation","answers_div","children","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","title","questions","contextsavedquestions","remove","_ref2","catch","error","on_save_question_button_clicked","add_save_question_button_listener","render_edit_question_menu_popup","answer","answer_container","answerid","answerdescription","answercorrect","appendChild","async"],"mappings":"8cAcgBA,4BAA4BC,OAAQC,YAC5BC,SAASC,eAAe,wBAC9BC,iBAAiB,SAAUC,YACjCC,OAASD,MAAMC,UAChBA,OAAOC,UAAUC,SAAS,sBAAwBF,OAAOC,UAAUC,SAAS,kBAAmB,KAC1FC,WAAaC,SAASJ,OAAOK,QAAQC,GAAI,cAMhBZ,OAAQC,WAAYQ,+BAE/CI,iBAAiB,oCAGtBC,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BAEDC,mBAAmB,kBAAmBF,KAAMC,iCACzCjB,OAAQS,YAAYK,MAAMK,qBAgFXC,cACpClB,SAASC,eAAe,qBAAqBkB,MAAQD,aAAaE,cAClEpB,SAASC,eAAe,2BAA2BkB,MAAQD,aAAaG,oBACxErB,SAASC,eAAe,2BAA2BkB,MAAQD,aAAaI,wBACpEC,QAAUL,aAAaK,YACvB,IAAIC,EAAE,EAAGA,EAAID,QAAQE,OAAQD,IAC7BE,6BAA6BH,QAAQC,IAEzCG,QAAQC,IAAI,YAAYL,SAxFoCM,CAA+BZ,mFAUpDnB,OAAQC,WAAYQ,YAChCP,SAAS8B,cAAc,gBAC7B5B,iBAAiB,SAAS,eAKVJ,OAAQC,WAAYQ,gBACrDwB,qBAAuB/B,SAASC,eAAe,qBAC/C+B,4BAA8BhC,SAASC,eAAe,2BACtDgC,4BAA8BjC,SAASC,eAAe,2BACtDiC,cAAgBH,qBAAqBZ,MAAMgB,OAC3CC,mBAAqBJ,4BAA4Bb,MAAMgB,OACvDE,oBAAsBJ,4BAA4Bd,MAAMgB,OAExDZ,QAAU,GACVe,YAActC,SAAS8B,cAAc,qCACpC,IAAIN,EAAI,EAAGA,EAAIc,YAAYC,SAASd,OAAQD,IAAK,KAC9CgB,WAAaF,YAAYC,SAASf,GACjCM,cAAc,iBACdX,MAAMgB,OAEPM,UACAH,YAAYC,SAASf,GAAGM,cAAc,oBAAoBY,QAC9DD,UAAYA,UAAY,EAAI,EAE5BlB,QAAQoB,KAAK,CACTC,YAAaJ,WACbK,QAASJ,UACTK,YAAa,SAIjBC,cAAgB,CAChBrC,GAAIH,WACJyC,MAAOd,cACPX,QAASA,QACTqB,YAAaR,mBACbU,YAAaT,0BAGb,6CAAoBU,cAAcxB,8CAIxBwB,cAAehD,WAAYD,QAAQc,MAAMqC,kBAC7CC,sBAAwB,CAC1BD,UAAWA,WAIMjD,SAAS8B,cAAc,yBAC7BqB,4BAGLxC,iBACN,oCACAuC,uBAECtC,MAAKwC,YAACtC,KAAEA,KAAFC,GAAQA,6BACDC,mBAAmB,6BAA8BF,KAAMC,IACjElB,4BAA4BC,OAAQC,+DACND,OAAOC,eAExCsD,OAAOC,QAAU,2BAAiBA,YAG3BtD,SAAS8B,cAAc,cAC7BqB,SAjENI,CAAgCzD,OAAQC,WAAYQ,eAXhDiD,CAAkC1D,OAAQC,WAAYQ,gFAKzD8C,OAAOC,QAAU,2BAAiBA,SApB/BG,CAAgC3D,OAAQC,WAAYQ,yBAyGvDmB,6BAA6BgC,YAC9BC,kBAAmB,iDAAwBD,OAAOE,UACtDD,iBAAiB7B,cAAc,iBAAiBX,MAAQuC,OAAOG,kBAC/DF,iBAAiB7B,cAAc,oBAAoBY,QAAUgB,OAAOI,cAC/C9D,SAAS8B,cAAc,iCAC7BiC,YAAYJ,gCAxHXK,MAAOlE,OAAQC,cAC/BF,4BAA4BC,OAAQC"}