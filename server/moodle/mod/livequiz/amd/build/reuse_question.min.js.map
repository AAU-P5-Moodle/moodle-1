{"version":3,"file":"reuse_question.min.js","sources":["../src/reuse_question.js"],"sourcesContent":["import {external_reuse_questions} from \".repository.js\";\nimport { rerender_saved_questions_list } from \"./edit_question_helper\";\nimport { add_delete_question_listeners } from \"./delete_question\";\nimport { add_edit_question_listeners } from \"./edit_question\";\n\n// Eventlisener for importing(reuse) questions into an existing quiz.\nexport const importQuestions = async(quizid, url, lecturerid) => {\n    take_quiz_url = url; //Set url to quiz attempt page to global variable\n    const importQuestionBtn = document.getElementById(\"importQuestionBtn\");\n    $questionids = get_checked_questions();\n    \n    importQuestionBtn.addEventListener(\"click\", async() => {\n        try {\n            await external_reuse_questions(quizid, questionids).then((questions) => {\n                let update_event_listeners = () => {\n                    add_edit_question_listeners(quizid, lecturerid);\n                    add_delete_question_listeners(quizid, lecturerid);\n                }\n                rerender_saved_questions_list(questions, update_event_listeners); //Re-render saved questions list\n                rerender_take_quiz_button(take_quiz_url, true); //Re-render take quiz button       \n            });\n        } catch (error) {\n            window.console.error(\"Error in import of questions\");\n        }\n    });\n};\n\nfunction get_checked_questions() {\n    let checkedquestions = [];\n    let questions_div = document.querySelector(\".all_questions_for_lecturer_div\");\n\n    // Go through all questions to see if they're selected\n    for (let question of questions_div.children) {\n        let checkbox = question.querySelector('input[type=\"checkbox\"]')\n        if (checkbox.checked){\n            checkedquestions.push(checkbox.value);\n        }\n    };\n    return checkedquestions;\n};"],"names":["async","quizid","url","lecturerid","take_quiz_url","importQuestionBtn","document","getElementById","$questionids","checkedquestions","questions_div","querySelector","question","children","checkbox","checked","push","value","get_checked_questions","addEventListener","questionids","then","questions","rerender_take_quiz_button","error","window","console"],"mappings":"wUAM+BA,MAAMC,OAAQC,IAAKC,cAC9CC,cAAgBF,UACVG,kBAAoBC,SAASC,eAAe,qBAClDC,4BAmBIC,iBAAmB,GACnBC,cAAgBJ,SAASK,cAAc,uCAGtC,IAAIC,YAAYF,cAAcG,SAAU,KACrCC,SAAWF,SAASD,cAAc,0BAClCG,SAASC,SACTN,iBAAiBO,KAAKF,SAASG,cAGhCR,iBA7BQS,GAEfb,kBAAkBc,iBAAiB,SAASnB,oBAE9B,wCAAyBC,OAAQmB,aAAaC,MAAMC,oEAKxBA,WAJD,oDACGrB,OAAQE,+DACNF,OAAQE,eAG1CoB,0BAA0BnB,eAAe,MAE/C,MAAOoB,OACLC,OAAOC,QAAQF,MAAM"}