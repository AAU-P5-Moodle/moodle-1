{"version":3,"file":"question_editor.min.js","sources":["../src/question_editor.js"],"sourcesContent":["import Templates from \"core/templates\";\nimport {exception as displayException} from 'core/notification';\nimport {save_question} from \"./repository\";\n\nlet isEditing = false;\nlet editingIndex = 0;\nlet answer_count = 0;\n\nexport const init = async (quizid, lecturerid) => {\n  let add_question_button = document.getElementById(\"id_buttonaddquestion\");\n  add_question_button.addEventListener(\"click\", () => {\n    render_question_menu_popup(quizid, lecturerid);\n  });\n};\n\nfunction render_question_menu_popup(quizid, lecturerid) {\n  // This will call the function to load and render our template.\n  Templates.renderForPromise(\"mod_livequiz/question_menu_popup\")\n\n    // It returns a promise that needs to be resoved.\n    .then(({ html, js }) => {\n      // Here eventually I have my compiled template, and any javascript that it generated.\n      // The templates object has append, prepend and replace functions.\n      Templates.appendNodeContents(\".main-container\", html, js);\n      add_answer_button_event_listerner();\n      add_save_question_button_listener(quizid, lecturerid);\n      add_discard_question_button_listener();\n    })\n\n    // Deal with this exception (Using core/notify exception function is recommended).\n    .catch((error) => displayException(error));\n}\n\nfunction add_answer_button_event_listerner() {\n  //Adding event listerner to add answer button\n  let answer_button = document.querySelector(\".add_new_answer_to_question\");\n  answer_button.addEventListener(\"click\", () => {\n    append_answer_input();\n  });\n}\n\nfunction append_answer_input() {\n  let answer_container = document.createElement(\"div\");\n  answer_container.className = \"container_for_new_answer\";\n\n  let answer_input = document.createElement(\"input\");\n  answer_input.className = \"answer_input\";\n  answer_input.placeholder = \"Enter answer\";\n  answer_input.setAttribute(\"required\", true);\n\n  let answer_checkbox = document.createElement(\"input\");\n  answer_checkbox.setAttribute(\"type\", \"checkbox\");\n  answer_checkbox.className = \"answer_checkbox\";\n\n  let delete_answer_button = create_element(\n    \"delete_answer_button\",\n    \"button\",\n    \"delete_answer_button\",\n    \"\"\n  );\n\n  answer_container.appendChild(answer_checkbox);\n  answer_container.appendChild(answer_input);\n  answer_container.appendChild(delete_answer_button);\n\n  delete_answer_button.addEventListener(\"click\", () => {\n    answer_container.remove();\n    answer_count--;\n  });\n\n  let parent_element = document.querySelector(\".all_answers_for_question_div\");\n  parent_element.appendChild(answer_container);\n  answer_count++;\n}\n\nfunction add_save_question_button_listener(quizid, lecturerid) {\n  let save_question_button = document.querySelector(\".save_button\");\n  save_question_button.addEventListener(\"click\", () => {question_button(quizid, lecturerid);});\n}\n\nasync function question_button(quizid, lecturerid){\n    let question_input = document.querySelector(\".question_input_large\");\n    let questionText = question_input.value.trim();\n\n    if (!questionText) {\n      alert(\"Please enter a question.\");\n      return;\n    }\n\n    let answers = [];\n    let answers_div = document.querySelector(\".all_answers_for_question_div\");\n    for (let i = 0; i < answers_div.children.length; i++) {\n      let answertext = answers_div.children[i]\n        .querySelector(\".answer_input\")\n        .value.trim();\n\n        let iscorrect =\n        answers_div.children[i].querySelector(\".answer_checkbox\").checked;\n\n      answers.push({\n        description: answertext,\n        correct: iscorrect,\n        explanation: \"\",\n      });\n    }\n\n    let savedQuestion = {\n      title: questionText,\n      answers: answers,\n      description: \"\",\n      explanation: \"\",\n    };\n\n    console.log(\"before\");\n    let bool=await save_question(savedQuestion, lecturerid, quizid);\n    console.log(\"bool :\",bool);\n    console.log(\"after\");\n    let modal_div = document.querySelector(\".Modal_div\");\n    console.log(savedQuestion);\n    modal_div.remove();\n}\n\nfunction add_discard_question_button_listener() {\n  let discard_question_button = document.querySelector(\".discard_question_button\");\n  console.log(discard_question_button);\n  discard_question_button.addEventListener('click', () => {\n    render_question_confirmation();\n  });\n}\n\nfunction render_question_confirmation() {\n  console.log(\"GOT INTO LISTENER\");\n  Templates.renderForPromise(\"mod_livequiz/question_confirmation\")\n\n  .then(({ html, js }) => {\n    Templates.appendNodeContents(\".Modal_div\", html, js);\n    question_confirmation();\n  })\n  .catch((error) => displayException(error));\n}\n\nfunction question_confirmation() {\n  let toast_promise_deletion_div = document.querySelector(\".toast_promise_deletion_div\");\n  let cancel_question_deletion_button = document.querySelector(\".cancel_question_deletion_button\");\n  let continue_question_deletion_button = document.querySelector(\".continue_question_deletion_button\");\n\n  let modal_div = document.querySelector('.Modal_div');\n\n  continue_question_deletion_button.addEventListener('click', () => {\n    isEditing = false;\n    editingIndex = null\n    modal_div.remove();\n  });\n\n  cancel_question_deletion_button.addEventListener('click', () => {\n    toast_promise_deletion_div.remove();\n  });\n}\n\nfunction create_element(element_name, type, class_name, content) {\n  element_name = document.createElement(type);\n  element_name.className = class_name;\n  element_name.textContent = content;\n  return element_name;\n}\n"],"names":["isEditing","editingIndex","async","quizid","lecturerid","document","getElementById","addEventListener","renderForPromise","then","_ref","html","js","appendNodeContents","querySelector","answer_container","createElement","className","answer_input","placeholder","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","remove","append_answer_input","questionText","value","trim","alert","answers","answers_div","i","children","length","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","title","console","log","bool","modal_div","question_button","add_save_question_button_listener","discard_question_button","_ref2","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","question_confirmation","catch","error","add_discard_question_button_listener","render_question_menu_popup"],"mappings":"sTAIIA,WAAY,EACZC,aAAe,gBAGCC,MAAOC,OAAQC,cACPC,SAASC,eAAe,wBAC9BC,iBAAiB,SAAS,eAKZJ,OAAQC,+BAEhCI,iBAAiB,oCAGxBC,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BAGHC,mBAAmB,kBAAmBF,KAAMC,IAYtCP,SAASS,cAAc,+BAC7BP,iBAAiB,SAAS,qBAMpCQ,iBAAmBV,SAASW,cAAc,OAC9CD,iBAAiBE,UAAY,+BAEzBC,aAAeb,SAASW,cAAc,SAC1CE,aAAaD,UAAY,eACzBC,aAAaC,YAAc,eAC3BD,aAAaE,aAAa,YAAY,OAElCC,gBAAkBhB,SAASW,cAAc,SAC7CK,gBAAgBD,aAAa,OAAQ,YACrCC,gBAAgBJ,UAAY,sBAExBK,sBAyGkBC,aAxGpB,uBAwGkCC,KAvGlC,SAuGwCC,WAtGxC,uBAsGoDC,QArGpD,IAsGFH,aAAelB,SAASW,cAAcQ,OACzBP,UAAYQ,WACzBF,aAAaI,YAAcD,QACpBH,kBAJeA,aAAcC,KAAMC,WAAYC,QAlGtDX,iBAAiBa,YAAYP,iBAC7BN,iBAAiBa,YAAYV,cAC7BH,iBAAiBa,YAAYN,sBAE7BA,qBAAqBf,iBAAiB,SAAS,KAC7CQ,iBAAiBc,YAIExB,SAASS,cAAc,iCAC7Bc,YAAYb,kBAlCzBe,eAsCuC3B,OAAQC,YACtBC,SAASS,cAAc,gBAC7BP,iBAAiB,SAAS,qBAGlBJ,OAAQC,gBAE/B2B,aADiB1B,SAASS,cAAc,yBACVkB,MAAMC,WAEnCF,yBACHG,MAAM,gCAIJC,QAAU,GACVC,YAAc/B,SAASS,cAAc,qCACpC,IAAIuB,EAAI,EAAGA,EAAID,YAAYE,SAASC,OAAQF,IAAK,KAChDG,WAAaJ,YAAYE,SAASD,GACnCvB,cAAc,iBACdkB,MAAMC,OAEHQ,UACJL,YAAYE,SAASD,GAAGvB,cAAc,oBAAoB4B,QAE5DP,QAAQQ,KAAK,CACXC,YAAaJ,WACbK,QAASJ,UACTK,YAAa,SAIbC,cAAgB,CAClBC,MAAOjB,aACPI,QAASA,QACTS,YAAa,GACbE,YAAa,IAGfG,QAAQC,IAAI,cACRC,WAAW,6BAAcJ,cAAe3C,WAAYD,QACxD8C,QAAQC,IAAI,SAASC,MACrBF,QAAQC,IAAI,aACRE,UAAY/C,SAASS,cAAc,cACvCmC,QAAQC,IAAIH,eACZK,UAAUvB,SA1C0CwB,CAAgBlD,OAAQC,eApD1EkD,CAAkCnD,OAAQC,2BAkG1CmD,wBAA0BlD,SAASS,cAAc,4BACrDmC,QAAQC,IAAIK,yBACZA,wBAAwBhD,iBAAiB,SAAS,KAMlD0C,QAAQC,IAAI,wCACF1C,iBAAiB,sCAE1BC,MAAK+C,YAAC7C,KAAEA,KAAFC,GAAQA,6BACHC,mBAAmB,aAAcF,KAAMC,mBAO/C6C,2BAA6BpD,SAASS,cAAc,+BACpD4C,gCAAkCrD,SAASS,cAAc,oCACzD6C,kCAAoCtD,SAASS,cAAc,sCAE3DsC,UAAY/C,SAASS,cAAc,cAEvC6C,kCAAkCpD,iBAAiB,SAAS,KAC1DP,WAAY,EACZC,aAAe,KACfmD,UAAUvB,YAGZ6B,gCAAgCnD,iBAAiB,SAAS,KACxDkD,2BAA2B5B,YAnB3B+B,MAEDC,OAAOC,QAAU,2BAAiBA,YAhH/BC,MAIDF,OAAOC,QAAU,2BAAiBA,SAnBnCE,CAA2B7D,OAAQC"}