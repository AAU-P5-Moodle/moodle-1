{"version":3,"file":"question_editor.min.js","sources":["../src/question_editor.js"],"sourcesContent":["import Templates from \"core/templates\";\r\nimport { exception as displayException } from \"core/notification\";\r\nimport { save_question } from \"./repository\";\r\n\r\nlet isEditing = false;\r\nlet editingIndex = 0;\r\nlet answer_count = 0;\r\nlet IDs = 0;\r\n\r\nexport const init = async (quizid, lecturerid) => {\r\n  let add_question_button = document.getElementById(\"id_buttonaddquestion\");\r\n  add_question_button.addEventListener(\"click\", () => {\r\n    render_question_menu_popup(quizid, lecturerid);\r\n  });\r\n};\r\n\r\nfunction render_question_menu_popup(quizid, lecturerid) {\r\n  // This will call the function to load and render our template.\r\n  Templates.renderForPromise(\"mod_livequiz/question_menu_popup\")\r\n\r\n    // It returns a promise that needs to be resoved.\r\n    .then(({ html, js }) => {\r\n      // Here eventually I have my compiled template, and any javascript that it generated.\r\n      // The templates object has append, prepend and replace functions.\r\n      Templates.appendNodeContents(\".main-container\", html, js);\r\n      add_answer_button_event_listerner();\r\n      add_save_question_button_listener(quizid, lecturerid);\r\n      add_discard_question_button_listener();\r\n    })\r\n\r\n    // Deal with this exception (Using core/notify exception function is recommended).\r\n    .catch((error) => displayException(error));\r\n}\r\n\r\nfunction add_answer_button_event_listerner() {\r\n  //Adding event listerner to add answer button\r\n  let answer_button = document.querySelector(\".add_new_answer_to_question\");\r\n  answer_button.addEventListener(\"click\", () => {\r\n    append_answer_input();\r\n  });\r\n}\r\n\r\nfunction append_answer_input() {\r\n  let answer_container = document.createElement(\"div\");\r\n  answer_container.className = \"container_for_new_answer\";\r\n\r\n  let answer_input = document.createElement(\"input\");\r\n  answer_input.className = \"answer_input\";\r\n  answer_input.placeholder = \"Enter answer\";\r\n  answer_input.id = \"answer_input_\" + (IDs + 1);\r\n  answer_input.setAttribute(\"required\", true);\r\n\r\n  let answer_checkbox = document.createElement(\"input\");\r\n  answer_checkbox.setAttribute(\"type\", \"checkbox\");\r\n  answer_checkbox.className = \"answer_checkbox\";\r\n  answer_checkbox.id = \"answer_checkbox_\" + (IDs + 1);\r\n\r\n  let delete_answer_button = create_element(\r\n    \"delete_answer_button\",\r\n    \"button\",\r\n    \"delete_answer_button\",\r\n    \"delete\"\r\n  );\r\n  delete_answer_button.id = \"delete_answer_button_\" + (IDs + 1);\r\n\r\n  answer_container.appendChild(answer_checkbox);\r\n  answer_container.appendChild(answer_input);\r\n  answer_container.appendChild(delete_answer_button);\r\n\r\n  delete_answer_button.addEventListener(\"click\", () => {\r\n    answer_container.remove();\r\n    answer_count--;\r\n  });\r\n\r\n  let parent_element = document.querySelector(\".all_answers_for_question_div\");\r\n  parent_element.appendChild(answer_container);\r\n  answer_count++;\r\n  IDs++;\r\n}\r\n\r\nfunction add_save_question_button_listener(quizid, lecturerid) {\r\n  let save_question_button = document.querySelector(\".save_button\");\r\n  save_question_button.addEventListener(\"click\", () => {\r\n    question_button(quizid, lecturerid);\r\n  });\r\n}\r\n\r\nfunction question_button(quizid, lecturerid) {\r\n  let question_input_title = document.getElementById(\"question_title_id\");\r\n  let question_indput_description = document.getElementById(\"question_description_id\");\r\n  let question_indput_explanation = document.getElementById(\"question_explanation_id\");\r\n  let questionTitle = question_input_title.value.trim();\r\n  let questionDesription = question_indput_description.value.trim();\r\n  let questionExplanation = question_indput_explanation.value.trim();\r\n\r\n  if (!questionDesription) {\r\n    alert(\"Please enter a question description.\");\r\n    return;\r\n  }\r\n  if(!questionTitle){\r\n    questionTitle = \"Question\"\r\n  }\r\n  let answers = [];\r\n  let answers_div = document.querySelector(\".all_answers_for_question_div\");\r\n  for (let i = 0; i < answers_div.children.length; i++) {\r\n    let answertext = answers_div.children[i]\r\n      .querySelector(\".answer_input\")\r\n      .value.trim();\r\n\r\n      let iscorrect = answers_div.children[i].querySelector(\".answer_checkbox\").checked;\r\n      iscorrect ? iscorrect = 1 : iscorrect = 0;\r\n\r\n\r\n    answers.push({\r\n      description: answertext,\r\n      correct: iscorrect,\r\n      explanation: \"\",\r\n    });\r\n  }\r\n\r\n  let savedQuestion = {\r\n    title: questionTitle,\r\n    answers: answers,\r\n    description: questionDesription,\r\n    explanation: questionExplanation,\r\n  };\r\n\r\n  save_question(savedQuestion, lecturerid, quizid).then((questions) => {\r\n    const context = {\r\n      questions: questions,\r\n    };\r\n\r\n    questions_list = document.querySelector(\"#saved_questions_list\");\r\n    questions_list.remove();\r\n\r\n    Templates.renderForPromise(\"mod_livequiz/saved_questions_list\", context)\r\n      // It returns a promise that needs to be resoved.\r\n      .then(({ html, js }) => {\r\n        // Here eventually I have my compiled template, and any javascript that it generated.\r\n        // The templates object has append, prepend and replace functions.\r\n        Templates.appendNodeContents(\"#saved-questions-container\", html, js);\r\n      })\r\n\r\n      // Deal with this exception (Using core/notify exception function is recommended).\r\n      .catch((error) => displayException(error));\r\n\r\n  });\r\n  let modal_div = document.querySelector(\".Modal_div\");\r\n  modal_div.remove();\r\n}\r\n\r\nfunction add_discard_question_button_listener() {\r\n  let discard_question_button = document.querySelector(\r\n    \".discard_question_button\"\r\n  );\r\n  console.log(discard_question_button);\r\n  discard_question_button.addEventListener(\"click\", () => {\r\n    render_question_confirmation();\r\n  });\r\n}\r\n\r\nfunction render_question_confirmation() {\r\n  Templates.renderForPromise(\"mod_livequiz/question_confirmation\")\r\n\r\n    .then(({ html, js }) => {\r\n      Templates.appendNodeContents(\".Modal_div\", html, js);\r\n      question_confirmation();\r\n    })\r\n    .catch((error) => displayException(error));\r\n}\r\n\r\nfunction question_confirmation() {\r\n  let toast_promise_deletion_div = document.querySelector(\r\n    \".toast_promise_deletion_div\"\r\n  );\r\n  let cancel_question_deletion_button = document.querySelector(\r\n    \".cancel_question_deletion_button\"\r\n  );\r\n  let continue_question_deletion_button = document.querySelector(\r\n    \".continue_question_deletion_button\"\r\n  );\r\n\r\n  let modal_div = document.querySelector(\".Modal_div\");\r\n\r\n  continue_question_deletion_button.addEventListener(\"click\", () => {\r\n    isEditing = false;\r\n    editingIndex = null;\r\n    modal_div.remove();\r\n  });\r\n\r\n  cancel_question_deletion_button.addEventListener(\"click\", () => {\r\n    toast_promise_deletion_div.remove();\r\n  });\r\n}\r\n\r\nfunction create_element(element_name, type, class_name, content) {\r\n  element_name = document.createElement(type);\r\n  element_name.className = class_name;\r\n  element_name.textContent = content;\r\n  return element_name;\r\n}\r\n"],"names":["isEditing","editingIndex","IDs","async","quizid","lecturerid","document","getElementById","addEventListener","renderForPromise","then","_ref","html","js","appendNodeContents","querySelector","answer_container","createElement","className","answer_input","placeholder","id","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","remove","append_answer_input","question_input_title","question_indput_description","question_indput_explanation","questionTitle","value","trim","questionDesription","questionExplanation","alert","answers","answers_div","i","children","length","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","title","questions","context","questions_list","_ref2","catch","error","question_button","add_save_question_button_listener","discard_question_button","console","log","_ref3","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","modal_div","question_confirmation","add_discard_question_button_listener","render_question_menu_popup"],"mappings":"sTAIIA,WAAY,EACZC,aAAe,EAEfC,IAAM,gBAEUC,MAAOC,OAAQC,cACPC,SAASC,eAAe,wBAC9BC,iBAAiB,SAAS,eAKZJ,OAAQC,+BAEhCI,iBAAiB,oCAGxBC,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BAGHC,mBAAmB,kBAAmBF,KAAMC,IAYtCP,SAASS,cAAc,+BAC7BP,iBAAiB,SAAS,qBAMpCQ,iBAAmBV,SAASW,cAAc,OAC9CD,iBAAiBE,UAAY,+BAEzBC,aAAeb,SAASW,cAAc,SAC1CE,aAAaD,UAAY,eACzBC,aAAaC,YAAc,eAC3BD,aAAaE,GAAK,iBAAmBnB,IAAM,GAC3CiB,aAAaG,aAAa,YAAY,OAElCC,gBAAkBjB,SAASW,cAAc,SAC7CM,gBAAgBD,aAAa,OAAQ,YACrCC,gBAAgBL,UAAY,kBAC5BK,gBAAgBF,GAAK,oBAAsBnB,IAAM,OAE7CsB,sBA0IkBC,aAzIpB,uBAyIkCC,KAxIlC,SAwIwCC,WAvIxC,uBAuIoDC,QAtIpD,UAuIFH,aAAenB,SAASW,cAAcS,OACzBR,UAAYS,WACzBF,aAAaI,YAAcD,QACpBH,kBAJeA,aAAcC,KAAMC,WAAYC,QApItDJ,qBAAqBH,GAAK,yBAA2BnB,IAAM,GAE3Dc,iBAAiBc,YAAYP,iBAC7BP,iBAAiBc,YAAYX,cAC7BH,iBAAiBc,YAAYN,sBAE7BA,qBAAqBhB,iBAAiB,SAAS,KAC7CQ,iBAAiBe,YAIEzB,SAASS,cAAc,iCAC7Be,YAAYd,kBAE3Bd,MAvCE8B,eA0CuC5B,OAAQC,YACtBC,SAASS,cAAc,gBAC7BP,iBAAiB,SAAS,eAKxBJ,OAAQC,gBAC3B4B,qBAAuB3B,SAASC,eAAe,qBAC/C2B,4BAA8B5B,SAASC,eAAe,2BACtD4B,4BAA8B7B,SAASC,eAAe,2BACtD6B,cAAgBH,qBAAqBI,MAAMC,OAC3CC,mBAAqBL,4BAA4BG,MAAMC,OACvDE,oBAAsBL,4BAA4BE,MAAMC,WAEvDC,+BACHE,MAAM,wCAGJL,gBACFA,cAAgB,gBAEdM,QAAU,GACVC,YAAcrC,SAASS,cAAc,qCACpC,IAAI6B,EAAI,EAAGA,EAAID,YAAYE,SAASC,OAAQF,IAAK,KAChDG,WAAaJ,YAAYE,SAASD,GACnC7B,cAAc,iBACdsB,MAAMC,OAEHU,UAAYL,YAAYE,SAASD,GAAG7B,cAAc,oBAAoBkC,QAC9DD,UAAZA,UAAwB,EAAgB,EAG1CN,QAAQQ,KAAK,CACXC,YAAaJ,WACbK,QAASJ,UACTK,YAAa,SAIbC,cAAgB,CAClBC,MAAOnB,cACPM,QAASA,QACTS,YAAaZ,mBACbc,YAAab,mDAGDc,cAAejD,WAAYD,QAAQM,MAAM8C,kBAC/CC,QAAU,CACdD,UAAWA,WAGbE,eAAiBpD,SAASS,cAAc,yBACxC2C,eAAe3B,4BAELtB,iBAAiB,oCAAqCgD,SAE7D/C,MAAKiD,YAAC/C,KAAEA,KAAFC,GAAQA,6BAGHC,mBAAmB,6BAA8BF,KAAMC,OAIlE+C,OAAOC,QAAU,2BAAiBA,YAGvBvD,SAASS,cAAc,cAC7BgB,SAjER+B,CAAgB1D,OAAQC,eAzDtB0D,CAAkC3D,OAAQC,2BA8H1C2D,wBAA0B1D,SAASS,cACrC,4BAEFkD,QAAQC,IAAIF,yBACZA,wBAAwBxD,iBAAiB,SAAS,wBAMxCC,iBAAiB,sCAExBC,MAAKyD,YAACvD,KAAEA,KAAFC,GAAQA,6BACHC,mBAAmB,aAAcF,KAAMC,mBAOjDuD,2BAA6B9D,SAASS,cACxC,+BAEEsD,gCAAkC/D,SAASS,cAC7C,oCAEEuD,kCAAoChE,SAASS,cAC/C,sCAGEwD,UAAYjE,SAASS,cAAc,cAEvCuD,kCAAkC9D,iBAAiB,SAAS,KAC1DR,WAAY,EACZC,aAAe,KACfsE,UAAUxC,YAGZsC,gCAAgC7D,iBAAiB,SAAS,KACxD4D,2BAA2BrC,YAzBzByC,MAEDZ,OAAOC,QAAU,2BAAiBA,YA7IjCY,MAIDb,OAAOC,QAAU,2BAAiBA,SAnBnCa,CAA2BtE,OAAQC"}