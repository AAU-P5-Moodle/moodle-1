{"version":3,"file":"question_editor.min.js","sources":["../src/question_editor.js"],"sourcesContent":["import Templates from \"core/templates\";\nimport { exception as displayException } from \"core/notification\";\nimport { save_question } from \"./repository\";\n\nlet isEditing = false;\nlet editingIndex = 0;\nlet answer_count = 0;\nlet take_quiz_url = \"\";\n\nexport const init = async (quizid, lecturerid, url) => {\n  take_quiz_url = url; //Set url to quiz attempt page to global variable\n  let add_question_button = document.getElementById(\"id_buttonaddquestion\");\n  add_question_button.addEventListener(\"click\", () => {\n    render_question_menu_popup(quizid, lecturerid);\n  });\n};\n\nfunction render_question_menu_popup(quizid, lecturerid) {\n  // This will call the function to load and render our template.\n  Templates.renderForPromise(\"mod_livequiz/question_menu_popup\")\n\n    // It returns a promise that needs to be resoved.\n    .then(({ html, js }) => {\n      // Here eventually I have my compiled template, and any javascript that it generated.\n      // The templates object has append, prepend and replace functions.\n      Templates.appendNodeContents(\".main-container\", html, js);\n      add_answer_button_event_listerner();\n      add_save_question_button_listener(quizid, lecturerid);\n      add_discard_question_button_listener();\n    })\n\n    // Deal with this exception (Using core/notify exception function is recommended).\n    .catch((error) => displayException(error));\n}\n\nfunction add_answer_button_event_listerner() {\n  //Adding event listerner to add answer button\n  let answer_button = document.querySelector(\".add_new_answer_to_question\");\n  answer_button.addEventListener(\"click\", () => {\n    append_answer_input();\n  });\n}\n\nfunction append_answer_input() {\n  let answer_container = document.createElement(\"div\");\n  answer_container.className = \"container_for_new_answer\";\n\n  let answer_input = document.createElement(\"input\");\n  answer_input.className = \"answer_input\";\n  answer_input.placeholder = \"Enter answer \" + (answer_count + 1);\n  answer_input.id = \"answer_input_\" + (answer_count + 1);\n  answer_input.setAttribute(\"required\", true);\n\n  let answer_checkbox = document.createElement(\"input\");\n  answer_checkbox.setAttribute(\"type\", \"checkbox\");\n  answer_checkbox.className = \"answer_checkbox\";\n  answer_checkbox.id = \"answer_checkbox_\" + (answer_count + 1);\n\n  let delete_answer_button = create_element(\n    \"delete_answer_button\",\n    \"button\",\n    \"delete_answer_button\",\n    \"\"\n  );\n\n  answer_container.appendChild(answer_checkbox);\n  answer_container.appendChild(answer_input);\n  answer_container.appendChild(delete_answer_button);\n\n  delete_answer_button.addEventListener(\"click\", () => {\n    answer_container.remove();\n    answer_count--;\n  });\n\n  let parent_element = document.querySelector(\".all_answers_for_question_div\");\n  parent_element.appendChild(answer_container);\n  answer_count++;\n}\n\nfunction add_save_question_button_listener(quizid, lecturerid) {\n  let save_question_button = document.querySelector(\".save_button\");\n  save_question_button.addEventListener(\"click\", () => {\n    question_button(quizid, lecturerid);\n  });\n}\n\nfunction question_button(quizid, lecturerid) {\n  let question_input = document.querySelector(\".question_input_large\");\n  let questionText = question_input.value.trim();\n\n  if (!questionText) {\n    alert(\"Please enter a question.\");\n    return;\n  }\n\n  let answers = [];\n  let answers_div = document.querySelector(\".all_answers_for_question_div\");\n  for (let i = 0; i < answers_div.children.length; i++) {\n    let answertext = answers_div.children[i]\n      .querySelector(\".answer_input\")\n      .value.trim();\n\n    let iscorrect =\n      answers_div.children[i].querySelector(\".answer_checkbox\").checked;\n    iscorrect ? (iscorrect = 1) : (iscorrect = 0);\n\n    answers.push({\n      description: answertext,\n      correct: iscorrect,\n      explanation: \"\",\n    });\n  }\n\n  let savedQuestion = {\n    title: questionText,\n    answers: answers,\n    description: \"\",\n    explanation: \"\",\n  };\n\n  save_question(savedQuestion, lecturerid, quizid).then((questions) => {\n    const contextsavedquestions = {\n      questions: questions,\n    };\n\n    const contexttakequiz = {\n      url: take_quiz_url,\n      hasquestions: true,\n    };\n\n    //Remove the saved questions list and take quiz button\n    let questions_list = document.querySelector(\"#saved_questions_list\");\n    questions_list.remove();\n\n    Templates.renderForPromise(\n      \"mod_livequiz/saved_questions_list\",\n      contextsavedquestions\n    )\n      // It returns a promise that needs to be resoved.\n      .then(({ html, js }) => {\n        // Here eventually I have my compiled template, and any javascript that it generated.\n        // The templates object has append, prepend and replace functions.\n        Templates.appendNodeContents(\"#saved-questions-container\", html, js);\n      })\n\n      // Deal with this exception (Using core/notify exception function is recommended).\n      .catch((error) => displayException(error));\n\n    let no_question_paragraph = document.querySelector(\".no-question-text\");\n\n    if (no_question_paragraph != null) {\n      no_question_paragraph.remove(); //We have just added a question so reomve the no question text\n      Templates.renderForPromise(\n        \"mod_livequiz/take_quiz_button\",\n        contexttakequiz\n      )\n        // It returns a promise that needs to be resoved.\n        .then(({ html, js }) => {\n          // Here eventually I have my compiled template, and any javascript that it generated.\n          // The templates object has append, prepend and replace functions.\n          Templates.appendNodeContents(\n            \"#page-mod-livequiz-quizcreator\",\n            html,\n            js\n          );\n        })\n\n        // Deal with this exception (Using core/notify exception function is recommended).\n        .catch((error) => displayException(error));\n    }\n  });\n  let modal_div = document.querySelector(\".Modal_div\");\n  modal_div.remove();\n}\n\nfunction add_discard_question_button_listener() {\n  let discard_question_button = document.querySelector(\n    \".discard_question_button\"\n  );\n  console.log(discard_question_button);\n  discard_question_button.addEventListener(\"click\", () => {\n    render_question_confirmation();\n  });\n}\n\nfunction render_question_confirmation() {\n  Templates.renderForPromise(\"mod_livequiz/question_confirmation\")\n\n    .then(({ html, js }) => {\n      Templates.appendNodeContents(\".Modal_div\", html, js);\n      question_confirmation();\n    })\n    .catch((error) => displayException(error));\n}\n\nfunction question_confirmation() {\n  let toast_promise_deletion_div = document.querySelector(\n    \".toast_promise_deletion_div\"\n  );\n  let cancel_question_deletion_button = document.querySelector(\n    \".cancel_question_deletion_button\"\n  );\n  let continue_question_deletion_button = document.querySelector(\n    \".continue_question_deletion_button\"\n  );\n\n  let modal_div = document.querySelector(\".Modal_div\");\n\n  continue_question_deletion_button.addEventListener(\"click\", () => {\n    isEditing = false;\n    editingIndex = null;\n    modal_div.remove();\n  });\n\n  cancel_question_deletion_button.addEventListener(\"click\", () => {\n    toast_promise_deletion_div.remove();\n  });\n}\n\nfunction create_element(element_name, type, class_name, content) {\n  element_name = document.createElement(type);\n  element_name.className = class_name;\n  element_name.textContent = content;\n  return element_name;\n}\n"],"names":["isEditing","editingIndex","answer_count","take_quiz_url","async","quizid","lecturerid","url","document","getElementById","addEventListener","renderForPromise","then","_ref","html","js","appendNodeContents","querySelector","answer_container","createElement","className","answer_input","placeholder","id","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","remove","append_answer_input","questionText","value","trim","alert","answers","answers_div","i","children","length","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","title","questions","contextsavedquestions","contexttakequiz","hasquestions","_ref2","catch","error","no_question_paragraph","_ref3","question_button","add_save_question_button_listener","discard_question_button","console","log","_ref4","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","modal_div","question_confirmation","add_discard_question_button_listener","render_question_menu_popup"],"mappings":"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"}