{"version":3,"file":"question_editor.min.js","sources":["../src/question_editor.js"],"sourcesContent":["import Templates from \"core/templates\";\r\nimport { exception as displayException } from \"core/notification\";\r\nimport { save_question } from \"./repository\";\r\n\r\nlet isEditing = false;\r\nlet editingIndex = 0;\r\nlet answer_count = 0;\r\n\r\nexport const init = async (quizid, lecturerid) => {\r\n  let add_question_button = document.getElementById(\"id_buttonaddquestion\");\r\n  add_question_button.addEventListener(\"click\", () => {\r\n    render_question_menu_popup(quizid, lecturerid);\r\n  });\r\n};\r\n\r\nfunction render_question_menu_popup(quizid, lecturerid) {\r\n  // This will call the function to load and render our template.\r\n  Templates.renderForPromise(\"mod_livequiz/question_menu_popup\")\r\n\r\n    // It returns a promise that needs to be resoved.\r\n    .then(({ html, js }) => {\r\n      // Here eventually I have my compiled template, and any javascript that it generated.\r\n      // The templates object has append, prepend and replace functions.\r\n      Templates.appendNodeContents(\".main-container\", html, js);\r\n      add_answer_button_event_listerner();\r\n      add_save_question_button_listener(quizid, lecturerid);\r\n      add_discard_question_button_listener();\r\n    })\r\n\r\n    // Deal with this exception (Using core/notify exception function is recommended).\r\n    .catch((error) => displayException(error));\r\n}\r\n\r\nfunction add_answer_button_event_listerner() {\r\n  //Adding event listerner to add answer button\r\n  let answer_button = document.querySelector(\".add_new_answer_to_question\");\r\n  answer_button.addEventListener(\"click\", () => {\r\n    append_answer_input();\r\n  });\r\n}\r\n\r\nfunction append_answer_input() {\r\n  let answer_container = document.createElement(\"div\");\r\n  answer_container.className = \"container_for_new_answer\";\r\n\r\n  let answer_input = document.createElement(\"input\");\r\n  answer_input.className = \"answer_input\";\r\n  answer_input.placeholder = \"Enter answer \" + (answer_count + 1);\r\n  answer_input.id = \"answer_input_\" + (answer_count + 1);\r\n  answer_input.setAttribute(\"required\", true);\r\n\r\n  let answer_checkbox = document.createElement(\"input\");\r\n  answer_checkbox.setAttribute(\"type\", \"checkbox\");\r\n  answer_checkbox.className = \"answer_checkbox\";\r\n  answer_checkbox.id = \"answer_checkbox_\" + (answer_count + 1);\r\n\r\n  let delete_answer_button = create_element(\r\n    \"delete_answer_button\",\r\n    \"button\",\r\n    \"delete_answer_button\",\r\n    \"\"\r\n  );\r\n\r\n  answer_container.appendChild(answer_checkbox);\r\n  answer_container.appendChild(answer_input);\r\n  answer_container.appendChild(delete_answer_button);\r\n\r\n  delete_answer_button.addEventListener(\"click\", () => {\r\n    answer_container.remove();\r\n    answer_count--;\r\n  });\r\n\r\n  let parent_element = document.querySelector(\".all_answers_for_question_div\");\r\n  parent_element.appendChild(answer_container);\r\n  answer_count++;\r\n}\r\n\r\nfunction add_save_question_button_listener(quizid, lecturerid) {\r\n  let save_question_button = document.querySelector(\".save_button\");\r\n  save_question_button.addEventListener(\"click\", () => {\r\n    question_button(quizid, lecturerid);\r\n  });\r\n}\r\n\r\nfunction question_button(quizid, lecturerid) {\r\n  let question_input = document.querySelector(\".question_input_large\");\r\n  let questionText = question_input.value.trim();\r\n\r\n  if (!questionText) {\r\n    alert(\"Please enter a question.\");\r\n    return;\r\n  }\r\n\r\n  let answers = [];\r\n  let answers_div = document.querySelector(\".all_answers_for_question_div\");\r\n  for (let i = 0; i < answers_div.children.length; i++) {\r\n    let answertext = answers_div.children[i]\r\n      .querySelector(\".answer_input\")\r\n      .value.trim();\r\n\r\n      let iscorrect = answers_div.children[i].querySelector(\".answer_checkbox\").checked;\r\n      iscorrect ? iscorrect = 1 : iscorrect = 0;\r\n\r\n\r\n    answers.push({\r\n      description: answertext,\r\n      correct: iscorrect,\r\n      explanation: \"\",\r\n    });\r\n  }\r\n\r\n  let savedQuestion = {\r\n    title: questionText,\r\n    answers: answers,\r\n    description: \"\",\r\n    explanation: \"\",\r\n  };\r\n\r\n  save_question(savedQuestion, lecturerid, quizid).then((questions) => {\r\n    const context = {\r\n      questions: questions,\r\n    };\r\n\r\n    questions_list = document.querySelector(\"#saved_questions_list\");\r\n    questions_list.remove();\r\n\r\n    Templates.renderForPromise(\"mod_livequiz/saved_questions_list\", context)\r\n      // It returns a promise that needs to be resoved.\r\n      .then(({ html, js }) => {\r\n        // Here eventually I have my compiled template, and any javascript that it generated.\r\n        // The templates object has append, prepend and replace functions.\r\n        Templates.appendNodeContents(\"#saved-questions-container\", html, js);\r\n      })\r\n\r\n      // Deal with this exception (Using core/notify exception function is recommended).\r\n      .catch((error) => displayException(error));\r\n\r\n  });\r\n  let modal_div = document.querySelector(\".Modal_div\");\r\n  modal_div.remove();\r\n}\r\n\r\nfunction add_discard_question_button_listener() {\r\n  let discard_question_button = document.querySelector(\r\n    \".discard_question_button\"\r\n  );\r\n  console.log(discard_question_button);\r\n  discard_question_button.addEventListener(\"click\", () => {\r\n    render_question_confirmation();\r\n  });\r\n}\r\n\r\nfunction render_question_confirmation() {\r\n  Templates.renderForPromise(\"mod_livequiz/question_confirmation\")\r\n\r\n    .then(({ html, js }) => {\r\n      Templates.appendNodeContents(\".Modal_div\", html, js);\r\n      question_confirmation();\r\n    })\r\n    .catch((error) => displayException(error));\r\n}\r\n\r\nfunction question_confirmation() {\r\n  let toast_promise_deletion_div = document.querySelector(\r\n    \".toast_promise_deletion_div\"\r\n  );\r\n  let cancel_question_deletion_button = document.querySelector(\r\n    \".cancel_question_deletion_button\"\r\n  );\r\n  let continue_question_deletion_button = document.querySelector(\r\n    \".continue_question_deletion_button\"\r\n  );\r\n\r\n  let modal_div = document.querySelector(\".Modal_div\");\r\n\r\n  continue_question_deletion_button.addEventListener(\"click\", () => {\r\n    isEditing = false;\r\n    editingIndex = null;\r\n    modal_div.remove();\r\n  });\r\n\r\n  cancel_question_deletion_button.addEventListener(\"click\", () => {\r\n    toast_promise_deletion_div.remove();\r\n  });\r\n}\r\n\r\nfunction create_element(element_name, type, class_name, content) {\r\n  element_name = document.createElement(type);\r\n  element_name.className = class_name;\r\n  element_name.textContent = content;\r\n  return element_name;\r\n}\r\n"],"names":["isEditing","editingIndex","answer_count","async","quizid","lecturerid","document","getElementById","addEventListener","renderForPromise","then","_ref","html","js","appendNodeContents","querySelector","answer_container","createElement","className","answer_input","placeholder","id","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","remove","append_answer_input","questionText","value","trim","alert","answers","answers_div","i","children","length","answertext","iscorrect","checked","push","description","correct","explanation","savedQuestion","title","questions","context","questions_list","_ref2","catch","error","question_button","add_save_question_button_listener","discard_question_button","console","log","_ref3","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","modal_div","question_confirmation","add_discard_question_button_listener","render_question_menu_popup"],"mappings":"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"}