{"version":3,"file":"question_editor.min.js","sources":["../src/question_editor.js"],"sourcesContent":["import Templates from \"core/templates\";\n\n// This will be the context for our template. So {{name}} in the template will resolve to \"Tweety bird\".\nconst context = {\n  name: \"Tweety bird\",\n  intelligence: 2,\n};\nisEditing = false;\neditingIndex = 0;\nlet answer_count = 0;\n\nexport const init = async () => {\n  let add_question_button = document.getElementById(\"id_buttonaddquestion\");\n  add_question_button.addEventListener(\"click\", () => {\n    render_question_menu_popup();\n  });\n};\n\nfunction render_question_menu_popup() {\n  // This will call the function to load and render our template.\n  Templates.renderForPromise(\"mod_livequiz/question_menu_popup\", context)\n\n    // It returns a promise that needs to be resoved.\n    .then(({ html, js }) => {\n      // Here eventually I have my compiled template, and any javascript that it generated.\n      // The templates object has append, prepend and replace functions.\n      Templates.appendNodeContents(\".main-container\", html, js);\n      add_answer_button_event_listerner();\n    })\n\n    // Deal with this exception (Using core/notify exception function is recommended).\n    .catch((error) => displayException(error));\n\n  //add_save_question_button_listener();\n}\n\nfunction add_answer_button_event_listerner() {\n  //Adding event listerner to add answer button\n  let answer_button = document.querySelector(\".add_new_answer_to_question\");\n  answer_button.addEventListener(\"click\", () => {\n    append_answer_input();\n  });\n}\n\nfunction append_answer_input() {\n  let answer_container = document.createElement(\"div\");\n  answer_container.className = \"container_for_new_answer\";\n\n  let answer_input = document.createElement(\"input\");\n  answer_input.className = \"answer_input\";\n  answer_input.placeholder = \"Enter answer\";\n  answer_input.setAttribute(\"required\", true);\n\n  let answer_checkbox = document.createElement(\"input\");\n  answer_checkbox.setAttribute(\"type\", \"checkbox\");\n  answer_checkbox.className = \"answer_checkbox\";\n\n  let delete_answer_button = create_element(\n    \"delete_answer_button\",\n    \"button\",\n    \"delete_answer_button\",\n    \"\"\n  );\n\n  answer_container.appendChild(answer_checkbox);\n  answer_container.appendChild(answer_input);\n  answer_container.appendChild(delete_answer_button);\n\n  delete_answer_button.addEventListener(\"click\", () => {\n    answer_container.remove();\n    answer_count--;\n  });\n\n  let parent_element = document.querySelector(\".all_answers_for_question_div\");\n  parent_element.appendChild(answer_container);\n  answer_count++;\n}\n\nfunction add_save_question_button_listener() {\n  let save_question_button = document.querySelector(\".save_button\");\n  save_question_button.addEventListener(\"click\", () => {\n    let questionText = question_input.value.trim();\n    if (!questionText) {\n      alert(\"Please enter a question.\");\n      return;\n    }\n\n    let answers = [];\n    for (let i = 0; i < answers_div.children.length; i++) {\n      let answertext = answers_div.children[i]\n        .querySelector(\".answer_input\")\n        .value.trim();\n      let iscorrect =\n        answers_div.children[i].querySelector(\".answer_checkbox\").checked;\n\n      answers.push({\n        description: answertext,\n        correct: iscorrect,\n        explanation: \"\",\n      });\n    }\n\n    let file_input = file_picker.querySelector('input[type=\"file\"]');\n    let file = file_input.files[0];\n\n    let savedQuestion = {\n      question: questionText,\n      answers: answers,\n      file: file,\n      description: \"\",\n      explanation: \"\",\n    };\n\n    if (isEditing && editingIndex != null) {\n      savedQuestions[editingIndex] = savedQuestion;\n\n      let saved_questions_list = document.getElementById(\n        \"saved_questions_list\"\n      );\n      let question_list_item = saved_questions_list.children[editingIndex];\n\n      question_list_item.textContent = savedQuestion.question;\n\n      isEditing = false;\n      editingIndex = null;\n    } else {\n      savedQuestions.push(savedQuestion);\n\n      let saved_questions_list = document.getElementById(\n        \"saved_questions_list\"\n      );\n      let question_list_item = document.createElement(\"li\");\n      question_list_item.textContent = savedQuestion.question;\n      question_list_item.dataset.index = savedQuestions.length - 1;\n\n      const openModalHandler = () => {\n        open_saved_question_modal(\n          savedQuestions[question_list_item.dataset.index],\n          question_list_item.dataset.index\n        );\n      };\n\n      question_list_item.addEventListener(\"click\", openModalHandler);\n      saved_questions_list.appendChild(question_list_item);\n    }\n\n    modal_div.remove();\n  });\n\n  return save_question_button;\n}\n\nfunction create_element(element_name, type, class_name, content) {\n  element_name = document.createElement(type);\n  element_name.className = class_name;\n  element_name.textContent = content;\n  return element_name;\n}\n"],"names":["context","name","intelligence","isEditing","editingIndex","async","document","getElementById","addEventListener","renderForPromise","then","_ref","html","js","appendNodeContents","querySelector","answer_container","createElement","className","answer_input","placeholder","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","remove","append_answer_input","catch","error","displayException"],"mappings":"2PAGMA,QAAU,CACdC,KAAM,cACNC,aAAc,GAEhBC,WAAY,EACZC,aAAe,gBAGKC,UACQC,SAASC,eAAe,wBAC9BC,iBAAiB,SAAS,wBAOpCC,iBAAiB,mCAAoCT,SAG5DU,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BAGHC,mBAAmB,kBAAmBF,KAAMC,IAYtCP,SAASS,cAAc,+BAC7BP,iBAAiB,SAAS,qBAMpCQ,iBAAmBV,SAASW,cAAc,OAC9CD,iBAAiBE,UAAY,+BAEzBC,aAAeb,SAASW,cAAc,SAC1CE,aAAaD,UAAY,eACzBC,aAAaC,YAAc,eAC3BD,aAAaE,aAAa,YAAY,OAElCC,gBAAkBhB,SAASW,cAAc,SAC7CK,gBAAgBD,aAAa,OAAQ,YACrCC,gBAAgBJ,UAAY,sBAExBK,sBA+FkBC,aA9FpB,uBA8FkCC,KA7FlC,SA6FwCC,WA5FxC,uBA4FoDC,QA3FpD,IA4FFH,aAAelB,SAASW,cAAcQ,OACzBP,UAAYQ,WACzBF,aAAaI,YAAcD,QACpBH,kBAJeA,aAAcC,KAAMC,WAAYC,QAxFtDX,iBAAiBa,YAAYP,iBAC7BN,iBAAiBa,YAAYV,cAC7BH,iBAAiBa,YAAYN,sBAE7BA,qBAAqBf,iBAAiB,SAAS,KAC7CQ,iBAAiBc,YAIExB,SAASS,cAAc,iCAC7Bc,YAAYb,kBAlCzBe,SATCC,OAAOC,OAAUC,iBAAiBD"}