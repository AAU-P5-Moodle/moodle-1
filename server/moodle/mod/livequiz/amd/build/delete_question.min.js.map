{"version":3,"file":"delete_question.min.js","sources":["../src/delete_question.js"],"sourcesContent":["import { delete_question } from \"./repository\";\nimport { rerender_take_quiz_button } from \"./helper\";\n\nlet take_quiz_url = \"\";\n\nexport const init = async (quizid, lecturerid, url) => {\n  take_quiz_url = url; //Set url to quiz attempt page to global variable\n  add_delete_question_listeners(quizid, lecturerid);\n};\n\nexport function add_delete_question_listeners(quizid, lecturerid) {\n  let question_list = document.getElementById(\"saved_questions_list\");\n  let list_items = question_list.querySelectorAll(\"li\");\n\n  list_items.forEach((item) => {\n    item.addEventListener(\"click\", () => {\n      let questionid = item.id;\n      questionid = parseInt(questionid.replace(\"question_list_\", \"\"));\n      delete_question(questionid, lecturerid, quizid);\n      let edit_button = item.nextElementSibling; //The edit buttons is always a sibling of the question\n      edit_button.remove();\n      item.remove();\n      \n      let updated_list_length = question_list.querySelectorAll(\"li\").length;\n      if(updated_list_length === 0) {\n        rerender_take_quiz_button(take_quiz_url, false);\n      }\n    });\n  });\n}\n"],"names":["take_quiz_url","add_delete_question_listeners","quizid","lecturerid","question_list","document","getElementById","querySelectorAll","forEach","item","addEventListener","questionid","id","parseInt","replace","nextElementSibling","remove","length","async","url"],"mappings":"0QAGIA,cAAgB,YAOJC,8BAA8BC,OAAQC,gBAChDC,cAAgBC,SAASC,eAAe,wBAC3BF,cAAcG,iBAAiB,MAErCC,SAASC,OAClBA,KAAKC,iBAAiB,SAAS,SACzBC,WAAaF,KAAKG,GACtBD,WAAaE,SAASF,WAAWG,QAAQ,iBAAkB,qCAC3CH,WAAYR,WAAYD,QACtBO,KAAKM,mBACXC,SACZP,KAAKO,SAGsB,IADDZ,cAAcG,iBAAiB,MAAMU,8CAEnCjB,eAAe,uBApB7BkB,MAAOhB,OAAQC,WAAYgB,OAC7CnB,cAAgBmB,IAChBlB,8BAA8BC,OAAQC"}