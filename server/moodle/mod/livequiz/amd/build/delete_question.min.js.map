{"version":3,"file":"delete_question.min.js","sources":["../src/delete_question.js"],"sourcesContent":["import { delete_question } from \"./repository\";\nimport { rerender_take_quiz_button } from \"./edit_question_helper\";\n\nlet take_quiz_url = \"\";\n\nexport const init = async (quizid, lecturerid, url) => {\n  take_quiz_url = url; //Set url to quiz attempt page to global variable\n  add_delete_question_listeners(quizid, lecturerid);\n};\n\nexport function add_delete_question_listeners(quizid, lecturerid) {\n  let question_list = document.getElementById(\"saved_questions_list\");\n  let delete_question_elements = question_list.querySelectorAll(\".delete-question\");\n\n  delete_question_elements.forEach((element) => {\n    element.addEventListener(\"click\", () => {\n      let list_item = element.closest(\"li\"); // Get the list item.\n      let questionid = parseInt(element.dataset.id, 10);\n            if (!confirm(\"Are you sure you want to delete this question?\")) {\n                return;\n            } else {\n                delete_question(questionid, lecturerid, quizid)\n                    .then((response) => {\n                        if (response.success) {\n                            list_item.remove(); // Remove the question from the list.\n                            element.remove(); // Remove the delete button.\n                            let updated_list_length = question_list.querySelectorAll(\"li\").length;\n                            if (updated_list_length === 0) {\n                                rerender_take_quiz_button(take_quiz_url, false);\n                            }\n                        } else {\n                            alert(\"Cannot delete question: \" + response.message);\n                        }\n                    });\n            }\n    });\n  });\n}\n"],"names":["take_quiz_url","add_delete_question_listeners","quizid","lecturerid","question_list","document","getElementById","querySelectorAll","forEach","element","addEventListener","list_item","closest","questionid","parseInt","dataset","id","confirm","then","response","success","remove","length","alert","message","async","url"],"mappings":"sSAGIA,cAAgB,YAOJC,8BAA8BC,OAAQC,gBAChDC,cAAgBC,SAASC,eAAe,wBACbF,cAAcG,iBAAiB,oBAErCC,SAASC,UAChCA,QAAQC,iBAAiB,SAAS,SAC5BC,UAAYF,QAAQG,QAAQ,MAC5BC,WAAaC,SAASL,QAAQM,QAAQC,GAAI,IACnCC,QAAQ,mFAGOJ,WAAYV,WAAYD,QACnCgB,MAAMC,cACCA,SAASC,QAAS,CAClBT,UAAUU,SACVZ,QAAQY,SAEoB,IADFjB,cAAcG,iBAAiB,MAAMe,4DAEjCtB,eAAe,QAG7CuB,MAAM,2BAA6BJ,SAASK,gCA1BpDC,MAAOvB,OAAQC,WAAYuB,OAC7C1B,cAAgB0B,IAChBzB,8BAA8BC,OAAQC"}