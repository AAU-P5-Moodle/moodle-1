{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\n\n\n/**\n * Call the submit_quiz service (see \"external\" folder). Used when a lecturer or student submits answer choices to a quiz.\n *\n * @param quizid\n * @param studentid\n * @param resultsurl\n */\nexport const submitQuiz = async(quizid, studentid, resultsurl) => fetchMany([\n    {\n        methodname: 'mod_livequiz_submit_quiz',\n        args: {\n            quizid,\n            studentid,\n            resultsurl\n        },\n    }\n])[0];\n\n/**\n * Calls the update_session service (see \"external\" folder). Used when a lecturer or student attempts a quiz.\n *\n * @param quizid\n * @param questionid\n * @param answers\n */\nexport const updateSession = (quizid, questionid, answers) => fetchMany([\n    {\n        methodname: 'mod_livequiz_update_session',\n        args: {\n            quizid,\n            questionid,\n            answers\n        },\n    }\n])[0];\n\n/**\n * Calls the save_question service (see \"external\" folder). Used when a lecturer adds or edits a quiz.\n *\n * @param question\n * @param lecturerid\n * @param quizid\n */\nexport const saveQuestion = (question, lecturerid, quizid) => fetchMany([\n    {\n        methodname: 'mod_livequiz_save_question',\n        args: {\n            question,\n            lecturerid,\n            quizid\n        },\n    }\n])[0];\n\n/**\n * Calls the delete_question service (see \"external\" folder). Used when a lecturer deletes a question from a quiz.\n *\n * @param questionid\n * @param lecturerid\n * @param quizid\n */\nexport const deleteQuestion = (questionid, lecturerid, quizid) => fetchMany([\n    {\n        methodname: 'mod_livequiz_delete_question',\n        args: {\n            questionid,\n            lecturerid,\n            quizid\n        },\n    }\n])[0];\n\n\n/**\n * Calls the get_question service (see \"external\" folder). Used when a lecturer opens a questions for editing.\n *\n * @param quizid\n * @param questionid\n */\nexport const getQuestion = (quizid, questionid) => fetchMany([\n    {\n        methodname: 'mod_livequiz_get_question',\n        args: {\n            quizid,\n            questionid\n        },\n    }\n])[0];\n\n/**\n * Calls the reuse_question service (see \"external\" folder). Used when a lecturer imports questions from one quiz to another.\n *\n * @param quizid\n * @param questionids\n * @param lecturerid\n */\nexport const externalReuseQuestions = (quizid, questionids, lecturerid) => fetchMany([\n    {\n        methodname: 'mod_livequiz_reuse_question',\n        args: {\n            quizid,\n            questionids,\n            lecturerid\n        },\n    }\n])[0];\n\n/**\n * Calls the get_lecturer_quiz service (see \"external\" folder).\n *\n * @param lecturerid\n */\nexport const getLecturerQuiz = (lecturerid) => fetchMany([\n    {\n        methodname: 'mod_livequiz_get_lecturer_quiz',\n        args: {\n            lecturerid\n        },\n    }\n])[0];"],"names":["async","quizid","studentid","resultsurl","methodname","args","questionid","answers","question","lecturerid","questionids"],"mappings":"6UAU0BA,MAAMC,OAAQC,UAAWC,cAAe,cAAU,CACxE,CACIC,WAAY,2BACZC,KAAM,CACFJ,OAAAA,OACAC,UAAAA,UACAC,WAAAA,eAGT,0BAS0B,CAACF,OAAQK,WAAYC,WAAY,cAAU,CACpE,CACIH,WAAY,8BACZC,KAAM,CACFJ,OAAAA,OACAK,WAAAA,WACAC,QAAAA,YAGT,yBASyB,CAACC,SAAUC,WAAYR,UAAW,cAAU,CACpE,CACIG,WAAY,6BACZC,KAAM,CACFG,SAAAA,SACAC,WAAAA,WACAR,OAAAA,WAGT,2BAS2B,CAACK,WAAYG,WAAYR,UAAW,cAAU,CACxE,CACIG,WAAY,+BACZC,KAAM,CACFC,WAAAA,WACAG,WAAAA,WACAR,OAAAA,WAGT,wBASwB,CAACA,OAAQK,cAAe,cAAU,CACzD,CACIF,WAAY,4BACZC,KAAM,CACFJ,OAAAA,OACAK,WAAAA,eAGT,mCASmC,CAACL,OAAQS,YAAaD,cAAe,cAAU,CACjF,CACIL,WAAY,8BACZC,KAAM,CACFJ,OAAAA,OACAS,YAAAA,YACAD,WAAAA,eAGT,4BAO6BA,aAAe,cAAU,CACrD,CACIL,WAAY,iCACZC,KAAM,CACFI,WAAAA,eAGT"}