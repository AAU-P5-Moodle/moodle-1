{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\r\n\r\n\r\n/**\r\n * Call the submit_quiz service (see \"external\" folder). Used when a lecturer or student submits answer choices to a quiz.\r\n *\r\n * @param quizid\r\n * @param studentid\r\n * @param resultsurl\r\n */\r\nexport const submitQuiz = async(quizid, studentid, resultsurl) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_submit_quiz',\r\n        args: {\r\n            quizid,\r\n            studentid,\r\n            resultsurl\r\n        },\r\n    }\r\n])[0];\r\n\r\n/**\r\n * Calls the update_session service (see \"external\" folder). Used when a lecturer or student attempts a quiz.\r\n *\r\n * @param quizid\r\n * @param questionid\r\n * @param answers\r\n */\r\nexport const updateSession = (quizid, questionid, answers) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_update_session',\r\n        args: {\r\n            quizid,\r\n            questionid,\r\n            answers\r\n        },\r\n    }\r\n])[0];\r\n\r\n/**\r\n * Calls the save_question service (see \"external\" folder). Used when a lecturer adds or edits a quiz.\r\n *\r\n * @param question\r\n * @param lecturerid\r\n * @param quizid\r\n */\r\nexport const saveQuestion = (question, lecturerid, quizid) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_save_question',\r\n        args: {\r\n            question,\r\n            lecturerid,\r\n            quizid\r\n        },\r\n    }\r\n])[0];\r\n\r\n/**\r\n * Calls the delete_question service (see \"external\" folder). Used when a lecturer deletes a question from a quiz.\r\n *\r\n * @param questionid\r\n * @param lecturerid\r\n * @param quizid\r\n */\r\nexport const deleteQuestion = (questionid, lecturerid, quizid) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_delete_question',\r\n        args: {\r\n            questionid,\r\n            lecturerid,\r\n            quizid\r\n        },\r\n    }\r\n])[0];\r\n\r\n\r\n/**\r\n * Calls the get_question service (see \"external\" folder). Used when a lecturer opens a questions for editing.\r\n *\r\n * @param quizid\r\n * @param questionid\r\n */\r\nexport const getQuestion = (quizid, questionid) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_get_question',\r\n        args: {\r\n            quizid,\r\n            questionid\r\n        },\r\n    }\r\n])[0];\r\n\r\n/**\r\n * Calls the reuse_question service (see \"external\" folder). Used when a lecturer imports questions from one quiz to another.\r\n *\r\n * @param quizid\r\n * @param questionids\r\n * @param lecturerid\r\n */\r\nexport const externalReuseQuestions = (quizid, questionids, lecturerid) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_reuse_question',\r\n        args: {\r\n            quizid,\r\n            questionids,\r\n            lecturerid\r\n        },\r\n    }\r\n])[0];\r\n\r\n/**\r\n * Calls the get_lecturer_quiz service (see \"external\" folder).\r\n *\r\n * @param lecturerid\r\n */\r\nexport const getLecturerQuiz = (lecturerid) => fetchMany([\r\n    {\r\n        methodname: 'mod_livequiz_get_lecturer_quiz',\r\n        args: {\r\n            lecturerid\r\n        },\r\n    }\r\n])[0];"],"names":["async","quizid","studentid","resultsurl","methodname","args","questionid","answers","question","lecturerid","questionids"],"mappings":"6UAU0BA,MAAMC,OAAQC,UAAWC,cAAe,cAAU,CACxE,CACIC,WAAY,2BACZC,KAAM,CACFJ,OAAAA,OACAC,UAAAA,UACAC,WAAAA,eAGT,0BAS0B,CAACF,OAAQK,WAAYC,WAAY,cAAU,CACpE,CACIH,WAAY,8BACZC,KAAM,CACFJ,OAAAA,OACAK,WAAAA,WACAC,QAAAA,YAGT,yBASyB,CAACC,SAAUC,WAAYR,UAAW,cAAU,CACpE,CACIG,WAAY,6BACZC,KAAM,CACFG,SAAAA,SACAC,WAAAA,WACAR,OAAAA,WAGT,2BAS2B,CAACK,WAAYG,WAAYR,UAAW,cAAU,CACxE,CACIG,WAAY,+BACZC,KAAM,CACFC,WAAAA,WACAG,WAAAA,WACAR,OAAAA,WAGT,wBASwB,CAACA,OAAQK,cAAe,cAAU,CACzD,CACIF,WAAY,4BACZC,KAAM,CACFJ,OAAAA,OACAK,WAAAA,eAGT,mCASmC,CAACL,OAAQS,YAAaD,cAAe,cAAU,CACjF,CACIL,WAAY,8BACZC,KAAM,CACFJ,OAAAA,OACAS,YAAAA,YACAD,WAAAA,eAGT,4BAO6BA,aAAe,cAAU,CACrD,CACIL,WAAY,iCACZC,KAAM,CACFI,WAAAA,eAGT"}