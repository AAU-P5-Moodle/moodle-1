define("mod_livequiz/answer_question_student",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=(url,studentid)=>{console.log("Initializing quiz interaction.");const nextQuestionBtn=document.getElementById("nextButton");if(!nextQuestionBtn)return void console.error("Next button not found!");const quizid=document.getElementsByName("quizid")[0].value,cmid=document.getElementsByName("cmid")[0].value,questionid=document.getElementsByName("questionid")[0].value;quizid&&cmid&&questionid?nextQuestionBtn.addEventListener("click",(async()=>{const socket=await function(url){let socket;return socket=new WebSocket(url),new Promise((function(myResolve,myReject){socket.onopen=()=>{console.log("WebSocket connection established successfully!"),myResolve(socket)},socket.onerror=error=>{console.error("WebSocket encountered an error:",error),myReject()},console.log("WebSocket object created, awaiting connection."),socket.onmessage=event=>{console.log("WebSocket message received:",event.data)},socket.onclose=()=>{console.log("WebSocket connection closed.")}}))}("".concat(url,"?requesttype=nextquestion&userid=").concat(studentid));console.log("Preparing to send data.");const answerElement=document.querySelectorAll(".answer input");answerElement||console.error("Answer id does not exists");let idOfAnswers=Array.from(answerElement).filter((answer=>answer.checked)).map((answer=>answer.value));const questiondata={quizid:quizid,cmid:cmid,questionid:questionid,idOfAnswers:idOfAnswers};try{socket&&socket.readyState===WebSocket.OPEN||console.log("Not ready to send data."),console.log("sending message");const message=JSON.stringify(questiondata);socket.send(message)}catch(e){console.error("Failed to send data of answer, ".concat(e))}})):console.error("Buttons with id 'quizid', 'cmid', 'questionid' not found!")}}));

//# sourceMappingURL=answer_question_student.min.js.map