define("mod_livequiz/import_question",["exports","core/templates","./edit_question_helper","./edit_question","./delete_question","core/notification","./repository"],(function(_exports,_templates,_edit_question_helper,_edit_question,_delete_question,_notification,_repository){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};_exports.init=async(quizid,lecturerid,url)=>{document.getElementById("id_buttonimportquestion").addEventListener("click",(()=>{!async function(quizid,lecturerid,url){_templates.default.renderForPromise("mod_livequiz/import_question_popup").then((async _ref=>{let{html:html,js:js}=_ref;_templates.default.appendNodeContents(".main-container",html,js),await async function(quizid,url,lecturerid){let quiz_url=url;document.querySelector(".import_btn").addEventListener("click",(async()=>{try{let questionids=function(){let checkedquestions=[],questions_div=document.querySelector(".oldQuestions");for(let question of questions_div.children){let checkbox=question.querySelector('input[type="checkbox"]');checkbox.checked&&checkedquestions.push(parseInt(checkbox.value))}return checkedquestions}();!function(quizid,questionids,lecturerid,quiz_url){(0,_repository.external_reuse_questions)(quizid,questionids,lecturerid).then((questions=>{let update_event_listeners=()=>{(0,_edit_question.add_edit_question_listeners)(quizid,lecturerid),(0,_delete_question.add_delete_question_listeners)(quizid,lecturerid)};(0,_edit_question_helper.rerender_saved_questions_list)(questions,update_event_listeners),(0,_edit_question_helper.rerender_take_quiz_button)(quiz_url,!0)})).catch((error=>(0,_notification.displayException)(error))),document.querySelector(".Modal_div").remove()}(quizid,questionids,lecturerid,quiz_url)}catch(error){window.console.error("Error in import of questions"),(0,_notification.displayException)(error)}}))}(quizid,url,lecturerid),(0,_edit_question_helper.add_discard_question_button_listener)(),function(lecturerid){(0,_repository.get_lecturer_questions)(lecturerid).then((oldquestions=>{oldquestions.forEach((question=>{let question_div=document.createElement("div");question_div.innerHTML='\n                <input type="checkbox" value="'.concat(question.questionid,'" id="question_').concat(question.questionid,' ">\n                <label for="question_').concat(question.questionid,'">').concat(question.questiontitle,"</label>\n                "),document.querySelector(".oldQuestions").appendChild(question_div)}))})).catch((error=>(0,_notification.displayException)(error)))}(lecturerid)})).catch((error=>(0,_notification.displayException)(error)))}(quizid,lecturerid,url)}))}}));

//# sourceMappingURL=import_question.min.js.map