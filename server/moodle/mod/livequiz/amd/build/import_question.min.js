define("mod_livequiz/import_question",["exports","core/templates","./edit_question_helper","./edit_question","./delete_question"],(function(_exports,_templates,_edit_question_helper,_edit_question,_delete_question){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};_exports.init=async(quizid,lecturerid,url)=>{document.getElementById("id_buttonimportquestion").addEventListener("click",(()=>{!function(quizid,lecturerid,url){_templates.default.renderForPromise("mod_livequiz/import_question_popup").then((_ref=>{let{html:html,js:js}=_ref;_templates.default.appendNodeContents(".main-container",html,js),function(quizid,lecturerid,url){document.querySelector(".save_button").addEventListener("click",function(quizid,url,lecturerid){quiz_url=url;const importQuestionBtn=document.getElementById("importQuestionBtn");$questionids=function(){let checkedquestions=[],questions_div=document.querySelector(".all_questions_for_lecturer_div");for(let question of questions_div.children){let checkbox=question.querySelector('input[type="checkbox"]');checkbox.checked&&checkedquestions.push(parseInt(checkbox.value))}return checkedquestions}(),importQuestionBtn.addEventListener("click",(async()=>{try{await external_reuse_questions(quizid,questionids).then((questions=>{let update_event_listeners=()=>{(0,_edit_question.add_edit_question_listeners)(quizid,lecturerid),(0,_delete_question.add_delete_question_listeners)(quizid,lecturerid)};(0,_edit_question_helper.rerender_saved_questions_list)(questions,update_event_listeners),rerender_take_quiz_button(quiz_url,!0)}))}catch(error){window.console.error("Error in import of questions")}}))}(quizid,url,lecturerid))}(quizid,lecturerid,url),(0,_edit_question_helper.add_discard_question_button_listener)()})).catch((error=>displayException(error)))}(quizid,lecturerid)}))}}));

//# sourceMappingURL=import_question.min.js.map