{"version":3,"file":"edit_question_helper.min.js","sources":["../src/edit_question_helper.js"],"sourcesContent":["import Templates from \"core/templates\";\nimport { exception as displayException } from \"core/notification\";\n\nlet IDs = 0;\nlet isEditing = false;\nlet editingIndex = 0;\n\nexport const add_answer_button_event_listener = ()=> {\n    //Adding event listerner to add answer button\n    let answer_button = document.querySelector(\".add_new_answer_to_question\");\n    answer_button.addEventListener(\"click\", () => {\n        append_answer_input();\n    });\n}\n\n function append_answer_input() {\n    let answer_container = create_answer_container(IDs+1);\n    let parent_element = document.querySelector(\".all_answers_for_question_div\");\n    parent_element.appendChild(answer_container);\n    IDs++;\n}\n\nexport function create_answer_container(id){\n    let answer_container = document.createElement(\"div\");\n    answer_container.className = \"container_for_new_answer\";\n\n    let answer_input = document.createElement(\"input\");\n    answer_input.className = \"answer_input\";\n    answer_input.placeholder = \"Enter answer\";\n    answer_input.id = \"answer_input_\" + (id);\n    answer_input.setAttribute(\"required\", true);\n\n    let answer_checkbox = document.createElement(\"input\");\n    answer_checkbox.setAttribute(\"type\", \"checkbox\");\n    answer_checkbox.className = \"answer_checkbox\";\n    answer_checkbox.id = \"answer_checkbox_\" + (id);\n\n    let delete_answer_button = create_element(\n        \"delete_answer_button\",\n        \"button\",\n        \"delete_answer_button\",\n        \"X\"\n    );\n    delete_answer_button.id = \"delete_answer_button_\" + (id);\n\n    answer_container.appendChild(answer_checkbox);\n    answer_container.appendChild(answer_input);\n    answer_container.appendChild(delete_answer_button);\n\n    delete_answer_button.addEventListener(\"click\", () => {\n        answer_container.remove();\n    });\n    return answer_container;\n}\n\nexport const add_discard_question_button_listener = () => {\n    let discard_question_button = document.querySelector(\n        \".discard_question_button\"\n    );\n    discard_question_button.addEventListener(\"click\", () => {\n        render_question_confirmation();\n    });\n}\n\nfunction render_question_confirmation() {\n    Templates.renderForPromise(\"mod_livequiz/question_confirmation\")\n\n        .then(({ html, js }) => {\n            Templates.appendNodeContents(\".Modal_div\", html, js);\n            question_confirmation();\n        })\n        .catch((error) => displayException(error));\n}\n\nfunction question_confirmation() {\n    let toast_promise_deletion_div = document.querySelector(\n        \".toast_promise_deletion_div\"\n    );\n    let cancel_question_deletion_button = document.querySelector(\n        \".cancel_question_deletion_button\"\n    );\n    let continue_question_deletion_button = document.querySelector(\n        \".continue_question_deletion_button\"\n    );\n\n    let modal_div = document.querySelector(\".Modal_div\");\n\n    continue_question_deletion_button.addEventListener(\"click\", () => {\n        isEditing = false;\n        editingIndex = null;\n        modal_div.remove();\n    });\n\n    cancel_question_deletion_button.addEventListener(\"click\", () => {\n        toast_promise_deletion_div.remove();\n    });\n}\n\nfunction create_element(element_name, type, class_name, content) {\n    element_name = document.createElement(type);\n    element_name.className = class_name;\n    element_name.textContent = content;\n    return element_name;\n}\n"],"names":["IDs","isEditing","editingIndex","create_answer_container","id","answer_container","document","createElement","className","answer_input","placeholder","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","addEventListener","remove","querySelector","append_answer_input","renderForPromise","then","_ref","html","js","appendNodeContents","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","modal_div","question_confirmation","catch","error"],"mappings":"maAGIA,IAAM,EACNC,WAAY,EACZC,aAAe,WAiBHC,wBAAwBC,QAChCC,iBAAmBC,SAASC,cAAc,OAC9CF,iBAAiBG,UAAY,+BAEzBC,aAAeH,SAASC,cAAc,SAC1CE,aAAaD,UAAY,eACzBC,aAAaC,YAAc,eAC3BD,aAAaL,GAAK,gBAAmBA,GACrCK,aAAaE,aAAa,YAAY,OAElCC,gBAAkBN,SAASC,cAAc,SAC7CK,gBAAgBD,aAAa,OAAQ,YACrCC,gBAAgBJ,UAAY,kBAC5BI,gBAAgBR,GAAK,mBAAsBA,OAEvCS,sBA6DgBC,aA5DhB,uBA4D8BC,KA3D9B,SA2DoCC,WA1DpC,uBA0DgDC,QAzDhD,KA0DJH,aAAeR,SAASC,cAAcQ,OACzBP,UAAYQ,WACzBF,aAAaI,YAAcD,QACpBH,kBAJaA,aAAcC,KAAMC,WAAYC,eAvDpDJ,qBAAqBT,GAAK,wBAA2BA,GAErDC,iBAAiBc,YAAYP,iBAC7BP,iBAAiBc,YAAYV,cAC7BJ,iBAAiBc,YAAYN,sBAE7BA,qBAAqBO,iBAAiB,SAAS,KAC3Cf,iBAAiBgB,YAEdhB,2DA7CqC,KAExBC,SAASgB,cAAc,+BAC7BF,iBAAiB,SAAS,qBAMpCf,iBAAmBF,wBAAwBH,IAAI,GAC9BM,SAASgB,cAAc,iCAC7BH,YAAYd,kBAC3BL,MARIuB,qDA4C4C,KAClBjB,SAASgB,cACnC,4BAEoBF,iBAAiB,SAAS,wBAMxCI,iBAAiB,sCAEtBC,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BACDC,mBAAmB,aAAcF,KAAMC,mBAOrDE,2BAA6BxB,SAASgB,cACtC,+BAEAS,gCAAkCzB,SAASgB,cAC3C,oCAEAU,kCAAoC1B,SAASgB,cAC7C,sCAGAW,UAAY3B,SAASgB,cAAc,cAEvCU,kCAAkCZ,iBAAiB,SAAS,KACxDnB,WAAY,EACZC,aAAe,KACf+B,UAAUZ,YAGdU,gCAAgCX,iBAAiB,SAAS,KACtDU,2BAA2BT,YAzBvBa,MAEHC,OAAOC,QAAU,2BAAiBA"}