{"version":3,"file":"edit_question_helper.min.js","sources":["../src/edit_question_helper.js"],"sourcesContent":["import Templates from \"core/templates\";\nimport { exception as displayException } from \"core/notification\";\n\nlet answer_count = 0;\nlet IDs = 0;\nlet isEditing = false;\nlet editingIndex = 0;\n\nexport const add_answer_button_event_listener = ()=> {\n    //Adding event listerner to add answer button\n    let answer_button = document.querySelector(\".add_new_answer_to_question\");\n    answer_button.addEventListener(\"click\", () => {\n        append_answer_input();\n    });\n}\n\nfunction append_answer_input() {\n    let answer_container = document.createElement(\"div\");\n    answer_container.className = \"container_for_new_answer\";\n\n    let answer_input = document.createElement(\"input\");\n    answer_input.className = \"answer_input\";\n    answer_input.placeholder = \"Enter answer\";\n    answer_input.id = \"answer_input_\" + (IDs + 1);\n    answer_input.setAttribute(\"required\", true);\n\n    let answer_checkbox = document.createElement(\"input\");\n    answer_checkbox.setAttribute(\"type\", \"checkbox\");\n    answer_checkbox.className = \"answer_checkbox\";\n    answer_checkbox.id = \"answer_checkbox_\" + (IDs + 1);\n\n    let delete_answer_button = create_element(\n        \"delete_answer_button\",\n        \"button\",\n        \"delete_answer_button\",\n        \"X\"\n    );\n    delete_answer_button.id = \"delete_answer_button_\" + (IDs + 1);\n\n    answer_container.appendChild(answer_checkbox);\n    answer_container.appendChild(answer_input);\n    answer_container.appendChild(delete_answer_button);\n\n    delete_answer_button.addEventListener(\"click\", () => {\n        answer_container.remove();\n        answer_count--;\n    });\n\n    let parent_element = document.querySelector(\".all_answers_for_question_div\");\n    parent_element.appendChild(answer_container);\n    answer_count++;\n    IDs++;\n}\n\nexport const add_discard_question_button_listener = () => {\n    let discard_question_button = document.querySelector(\n        \".discard_question_button\"\n    );\n    discard_question_button.addEventListener(\"click\", () => {\n        render_question_confirmation();\n    });\n}\n\nfunction render_question_confirmation() {\n    Templates.renderForPromise(\"mod_livequiz/question_confirmation\")\n\n        .then(({ html, js }) => {\n            Templates.appendNodeContents(\".Modal_div\", html, js);\n            question_confirmation();\n        })\n        .catch((error) => displayException(error));\n}\n\nfunction question_confirmation() {\n    let toast_promise_deletion_div = document.querySelector(\n        \".toast_promise_deletion_div\"\n    );\n    let cancel_question_deletion_button = document.querySelector(\n        \".cancel_question_deletion_button\"\n    );\n    let continue_question_deletion_button = document.querySelector(\n        \".continue_question_deletion_button\"\n    );\n\n    let modal_div = document.querySelector(\".Modal_div\");\n\n    continue_question_deletion_button.addEventListener(\"click\", () => {\n        isEditing = false;\n        editingIndex = null;\n        modal_div.remove();\n    });\n\n    cancel_question_deletion_button.addEventListener(\"click\", () => {\n        toast_promise_deletion_div.remove();\n    });\n}\n\nfunction create_element(element_name, type, class_name, content) {\n    element_name = document.createElement(type);\n    element_name.className = class_name;\n    element_name.textContent = content;\n    return element_name;\n}\n"],"names":["IDs","isEditing","editingIndex","document","querySelector","addEventListener","answer_container","createElement","className","answer_input","placeholder","id","setAttribute","answer_checkbox","delete_answer_button","element_name","type","class_name","content","textContent","appendChild","remove","append_answer_input","renderForPromise","then","_ref","html","js","appendNodeContents","toast_promise_deletion_div","cancel_question_deletion_button","continue_question_deletion_button","modal_div","question_confirmation","catch","error"],"mappings":"0WAIIA,IAAM,EACNC,WAAY,EACZC,aAAe,4CAE6B,KAExBC,SAASC,cAAc,+BAC7BC,iBAAiB,SAAS,qBAMpCC,iBAAmBH,SAASI,cAAc,OAC9CD,iBAAiBE,UAAY,+BAEzBC,aAAeN,SAASI,cAAc,SAC1CE,aAAaD,UAAY,eACzBC,aAAaC,YAAc,eAC3BD,aAAaE,GAAK,iBAAmBX,IAAM,GAC3CS,aAAaG,aAAa,YAAY,OAElCC,gBAAkBV,SAASI,cAAc,SAC7CM,gBAAgBD,aAAa,OAAQ,YACrCC,gBAAgBL,UAAY,kBAC5BK,gBAAgBF,GAAK,oBAAsBX,IAAM,OAE7Cc,sBAkEgBC,aAjEhB,uBAiE8BC,KAhE9B,SAgEoCC,WA/DpC,uBA+DgDC,QA9DhD,KA+DJH,aAAeZ,SAASI,cAAcS,OACzBR,UAAYS,WACzBF,aAAaI,YAAcD,QACpBH,kBAJaA,aAAcC,KAAMC,WAAYC,QA5DpDJ,qBAAqBH,GAAK,yBAA2BX,IAAM,GAE3DM,iBAAiBc,YAAYP,iBAC7BP,iBAAiBc,YAAYX,cAC7BH,iBAAiBc,YAAYN,sBAE7BA,qBAAqBT,iBAAiB,SAAS,KAC3CC,iBAAiBe,YAIAlB,SAASC,cAAc,iCAC7BgB,YAAYd,kBAE3BN,MAvCIsB,qDA0C4C,KAClBnB,SAASC,cACnC,4BAEoBC,iBAAiB,SAAS,wBAMxCkB,iBAAiB,sCAEtBC,MAAKC,WAACC,KAAEA,KAAFC,GAAQA,4BACDC,mBAAmB,aAAcF,KAAMC,mBAOrDE,2BAA6B1B,SAASC,cACtC,+BAEA0B,gCAAkC3B,SAASC,cAC3C,oCAEA2B,kCAAoC5B,SAASC,cAC7C,sCAGA4B,UAAY7B,SAASC,cAAc,cAEvC2B,kCAAkC1B,iBAAiB,SAAS,KACxDJ,WAAY,EACZC,aAAe,KACf8B,UAAUX,YAGdS,gCAAgCzB,iBAAiB,SAAS,KACtDwB,2BAA2BR,YAzBvBY,MAEHC,OAAOC,QAAU,2BAAiBA"}